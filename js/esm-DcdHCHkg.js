import { V as Vec2, a as Vec3, Q as Quat, C as Color, S as Script, W as WasmModule, M as Mesh, P as PRIMITIVE_TRISTRIP, b as Shader, c as Material, d as CULLFACE_NONE, B as BLEND_NORMAL, e as BoundingBox, f as MeshInstance, g as SEMANTIC_POSITION, h as SEMANTIC_COLOR } from './index.mjs';

function _define_property$t(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Constants{}_define_property$t(Constants,"EPS",1e-5);_define_property$t(Constants,"EPS2",Constants.EPS*Constants.EPS);_define_property$t(Constants,"INF",1e30);_define_property$t(Constants,"Deg2Rad",Math.PI/180);_define_property$t(Constants,"Rad2Deg",57.29578);_define_property$t(Constants,"GRAVITY",75);_define_property$t(Constants,"DEBUG_DRAW_MIN_LENGTH",.1);_define_property$t(Constants,"CURVE_MOVE_DISTANCE",.05);_define_property$t(Constants,"CURVE_OFFSET_MOVE_SPEED",1);_define_property$t(Constants,"ANIMATION_DEFAULT_TRANSITION",.1);_define_property$t(Constants,"BODY_DEFAULT_FRICTION",.5);_define_property$t(Constants,"BODY_INF_MASS",1e10);_define_property$t(Constants,"SHAPE_STATIC_CATEGORY",1);_define_property$t(Constants,"SHAPE_PLAYER_CATEGORY",2);_define_property$t(Constants,"SHAPE_ENEMY_CATEGORY",4);_define_property$t(Constants,"SHAPE_ENEMY_PATH_CATEGORY",8);_define_property$t(Constants,"SHAPE_PICKUP_CATEGORY",16);_define_property$t(Constants,"SHAPE_PICKUP_DETECTOR_CATEGORY",32);_define_property$t(Constants,"SHAPE_PLAYER_DETECTOR_CATEGORY",64);_define_property$t(Constants,"SHAPE_BASE_ZONE_CATEGORY",128);_define_property$t(Constants,"SHAPE_STATIC_MASK",Constants.SHAPE_PLAYER_CATEGORY|Constants.SHAPE_ENEMY_CATEGORY);_define_property$t(Constants,"SHAPE_PLAYER_MASK",Constants.SHAPE_STATIC_CATEGORY|Constants.SHAPE_ENEMY_CATEGORY|Constants.SHAPE_PLAYER_DETECTOR_CATEGORY|Constants.SHAPE_BASE_ZONE_CATEGORY);_define_property$t(Constants,"SHAPE_ENEMY_MASK",Constants.SHAPE_STATIC_CATEGORY|Constants.SHAPE_PLAYER_CATEGORY|Constants.SHAPE_ENEMY_CATEGORY);_define_property$t(Constants,"SHAPE_ENEMY_PATH_MASK",Constants.SHAPE_BASE_ZONE_CATEGORY);_define_property$t(Constants,"SHAPE_PICKUP_MASK",Constants.SHAPE_PICKUP_DETECTOR_CATEGORY);_define_property$t(Constants,"SHAPE_PICKUP_DETECTOR_MASK",Constants.SHAPE_PICKUP_CATEGORY);_define_property$t(Constants,"SHAPE_PLAYER_DETECTOR_MASK",Constants.SHAPE_PLAYER_CATEGORY);_define_property$t(Constants,"SHAPE_BASE_ZONE_MASK",Constants.SHAPE_PLAYER_CATEGORY|Constants.SHAPE_ENEMY_PATH_CATEGORY);_define_property$t(Constants,"CHARACTER_GROUND_DAMPING",5);_define_property$t(Constants,"CHARACTER_MAX_SPEED",20);_define_property$t(Constants,"CHARACTER_MAX_RADIUS",2);_define_property$t(Constants,"PLAYER_SHOUT_SFX_START_TIME",.5);_define_property$t(Constants,"PLAYER_SHOUT_SFX_START_COUNT",3);_define_property$t(Constants,"PLAYER_SHOUT_SFX_START_DELAY",1);_define_property$t(Constants,"TOWER_BUILDING_VEL_Y",5);_define_property$t(Constants,"TOWER_BUILDING_START_Y",-4.25);_define_property$t(Constants,"TOWER_BUILDING_END_Y",0);_define_property$t(Constants,"PLAYER_TOWER_PAY_COIN_DELAY",.075);_define_property$t(Constants,"PLAYER_TOWER_PAY_MAX_TIME",.75);_define_property$t(Constants,"ENEMY_COIN_DROP_MIN_RADIUS",.5);_define_property$t(Constants,"ENEMY_COIN_DROP_MAX_RADIUS",1.5);_define_property$t(Constants,"PLAYER_COIN_START_MIN_OFFSET",.1);_define_property$t(Constants,"PLAYER_COIN_START_MAX_OFFSET",.15);_define_property$t(Constants,"COIN_DROP_MAX_Y",2);_define_property$t(Constants,"COIN_PAY_MAX_Y",5);

var constants = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Constants: Constants
});

class Utils{static randomBetween(a,b){return a+Math.random()*(b-a)}static randomAngle(){return Utils.randomBetween(0,360)}static randomAngleRad(){return Utils.randomBetween(0,2*Math.PI)}static clampMagnitudeVec2(v,maxLength){var len2=v.lengthSq();if(len2>maxLength*maxLength){var ratio=maxLength/Math.sqrt(len2);return new Vec2(v.x*ratio,v.y*ratio)}return v}static clampMagnitudeVec2InPlace(v,x,y,maxLength){var len2=x*x+y*y;if(len2>maxLength*maxLength){var ratio=maxLength/Math.sqrt(len2);v.set(x*ratio,y*ratio);return}v.set(x,y);}static normalizeVec2(v){var len2=v.lengthSq();if(len2<Constants.EPS2){return Vec2.ZERO.clone()}var len=Math.sqrt(len2);return new Vec2(v.x/len,v.y/len)}static normalizeVec2InPlace(v){var len2=v.lengthSq();if(len2<Constants.EPS2){v.set(0,0);return}v.divScalar(Math.sqrt(len2));}static moveTowards(current,target,maxDelta){var delta=target-current;if(Math.abs(delta)<=maxDelta){return target}if(target<current)return current-maxDelta;else return current+maxDelta}static moveTowardsVec2(current,target,maxDelta){var dx=target.x-current.x;var dy=target.y-current.y;var d2=dx*dx+dy+dy;if(d2==0||maxDelta>=0&&d2<=maxDelta*maxDelta)return target.clone();var d=Math.sqrt(d2);return new Vec2(current.x+dx/d*maxDelta,current.y+dy/d*maxDelta)}static moveTowardsVec2InPlace(current,target,maxDelta){var dx=target.x-current.x;var dy=target.y-current.y;var d2=dx*dx+dy+dy;if(d2==0||maxDelta>=0&&d2<=maxDelta*maxDelta){current.copy(target);return}var d=Math.sqrt(d2);current.set(current.x+dx/d*maxDelta,current.y+dy/d*maxDelta);}static distanceSqrVec2(a,b){const x=a.x-b.x;const y=a.y-b.y;return x*x+y*y}static distanceSqrVec3(a,b){const x=a.x-b.x;const y=a.y-b.y;const z=a.z-b.z;return x*x+y*y+z*z}static clamp(value,min,max){return Math.min(Math.max(value,min),max)}static lerp(start,end,t){return start*(1-t)+end*t}static isZero(v){return Math.abs(v)<Constants.EPS}static isZeroVec2(v){return v.lengthSq()<Constants.EPS2}static isZeroVec3(v){return v.lengthSq()<Constants.EPS2}static isZeroQuat(q){return q.x*q.x+q.y*q.y+q.z*q.z<Constants.EPS2}static equalVec2(a,b){return Utils.distanceSqrVec2(a,b)<Constants.EPS2}static equalVec3(a,b){return Utils.distanceSqrVec3(a,b)<Constants.EPS2}static equal(a,b){return Math.abs(a-b)<Constants.EPS}static notEqual(a,b){return Math.abs(a-b)>Constants.EPS}static less(a,b){return a<b-Constants.EPS}static lessOrEqual(a,b){return a<b+Constants.EPS}static greater(a,b){return a>b+Constants.EPS}static greaterOrEqual(a,b){return a>b-Constants.EPS}static getPosition3D(position,height=0){return new Vec3(position.x,height,position.y)}static getPosition2D(position3D){return new Vec2(position3D.x,position3D.z)}static normalizeOrientation(orientation){orientation%=360;if(orientation<0)orientation+=360;if(Utils.equal(orientation,360))orientation=0;return orientation}static getOrientationFromDirection(direction,defaultOrientation=0){if(Utils.isZeroVec2(direction)){return defaultOrientation}return Math.atan2(direction.y,direction.x)*Constants.Rad2Deg}static getDirectionFromOrientation(orientation){var angle=orientation*Constants.Deg2Rad;return new Vec2(Math.cos(angle),Math.sin(angle))}static getRotationFromOrientation(orientation){return new Quat().setFromAxisAngle(Vec3.UP,90-orientation)}static getRotationFromOrientationOffset(orientation){return new Quat().setFromAxisAngle(Vec3.UP,-orientation)}static getRotationFromOrientationAndPitch(orientation,pitch){return new Quat().setFromAxisAngle(Vec3.UP,90-orientation).mul(new Quat().setFromAxisAngle(Vec3.RIGHT,-pitch))}static getPitchFromDirection(distanceH,distanceV,defaultPitch=0){if(Utils.isZero(distanceV)){if(Utils.isZero(distanceH)){return defaultPitch}return 0}else if(Utils.isZero(distanceH)){return distanceV<0?-90:90}else {return Math.atan2(distanceV,distanceH)*Constants.Rad2Deg}}static angleBetweenVec3(start,end){var length=Math.sqrt(start.lengthSq()*end.lengthSq());if(Utils.lessOrEqual(length,0)){return 0}var cosA=Utils.clamp(start.dot(end)/length,-1,1);return Math.acos(cosA)*Constants.Rad2Deg}static quatToAxisAngle(q,axis){if(Math.abs(q.w)>1){q.normalize();}var angle=2*Math.acos(q.w);var d=Math.sqrt(1-q.w*q.w);if(Utils.greater(d,0)){axis.set(q.x,q.y,q.z);axis.divScalar(d);}else {axis.set(Vec3.UP);}return angle*Constants.Rad2Deg}static decomposeSwingTwist(q,twistAxis,swing,twist){var r=new Vec3(q.x,q.y,q.z);if(Utils.isZeroVec3(r)){var rotatedTwistAxis=q.transformVector(twistAxis);var swingAxis=new Vec3().cross(twistAxis,rotatedTwistAxis);if(Utils.isZeroVec3(swingAxis)){var swingAngle=Utils.angleBetweenVec3(twistAxis,rotatedTwistAxis);swing.setFromAxisAngle(swingAxis,swingAngle);}else {swing.copy(Quat.IDENTITY);}twist=new Quat().setFromAxisAngle(twistAxis,180);return}var p=r.clone().project(twistAxis);twist.set(p.x,p.y,p.z,q.w);twist.normalize();swing.mul2(q,twist.clone().invert());}static guessRotation(q){var axis=new Vec3;var rotation=Utils.quatToAxisAngle(q,axis);if(Utils.isZero(rotation)){return 0}if(axis.y<0){rotation=-rotation;}return rotation}static getFilenameWithoutExtension(x){return x.replace(/\..+$/,"")}}

var utils = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Utils: Utils
});

class EnemyGridItem{updatePosition(){var position=this.enemy.getPosition();var newGridIndex=this.grid.getGridIndex(position);if(this.gridIndex!==newGridIndex){this.grid.removeItem(this);this.gridIndex=newGridIndex;this.grid.addItem(this);}}remove(){this.grid.removeItem(this);}constructor(grid,enemy){this.grid=grid;this.enemy=enemy;this.next=null;this.prev=null;this.gridIndex=-1;}}class EnemyGrid{destroy(){if(this.rootItems){this.rootItems.length=0;this.rootItems=null;}}createItem(enemy){return new EnemyGridItem(this,enemy)}getGridColumn(x){return Math.floor(x/this.cellSize)}getGridColumn_High(x){return Math.ceil(x/this.cellSize)-1}getGridRow(y){return Math.floor(y/this.cellSize)}getGridRow_High(y){return Math.ceil(y/this.cellSize)-1}getGridIndex(position){var col=Utils.clamp(this.getGridColumn(position.x-this.offset.x),0,this.width-1);var row=Utils.clamp(this.getGridRow(position.y-this.offset.y),0,this.height-1);return col+row*this.width}getGridArrayIndex(col,row){return col+row*this.width}removeItem(item){var gridIndex=item.gridIndex;if(gridIndex===-1)return;item.gridIndex=-1;var prevItem=item.prev;var nextItem=item.next;item.prev=null;item.next=null;if(prevItem!==null){prevItem.next=nextItem;}if(nextItem!==null){nextItem.prev=prevItem;}if(this.rootItems[gridIndex]===item){this.rootItems[gridIndex]=nextItem;}}addItem(item){var gridIndex=item.gridIndex;if(gridIndex===-1)return;var rootItem=this.rootItems[gridIndex];item.next=rootItem;if(rootItem!==null){rootItem.prev=item;}this.rootItems[gridIndex]=item;}processEnemyInCircle(position,radius,func){var x=position.x-this.offset.x;var y=position.y-this.offset.y;var x0=x-radius;var x1=x+radius;var col0=this.getGridColumn(x0);var col1=this.getGridColumn_High(x1);if(col0>col1)return;var dx,dy,y0,y1;var radius2=radius*radius;for(var col=col0;col<=col1;++col){x0=col*this.cellSize;x1=(col+1)*this.cellSize;if(x>x1){dx=x-x1;dy=Math.sqrt(radius2-dx*dx);y0=y-dy;y1=y+dy;}else if(x<x0){dx=x0-x;dy=Math.sqrt(radius2-dx*dx);y0=y-dy;y1=y+dy;}else {y0=y-radius;y1=y+radius;}var row0=this.getGridRow(y0);var row1=this.getGridRow_High(y1);if(row0>row1)continue;for(var row=row0;row<=row1;++row){var item=this.rootItems[this.getGridArrayIndex(col,row)];while(item!=null){var enemy=item.enemy;if(enemy.isAlive()){func(enemy);}item=item.next;}}}}constructor(width,height,cellSize,offset){this.width=width;this.height=height;this.cellSize=cellSize;this.offset=offset;this.totalCell=width*height;this.rootItems=new Array(this.totalCell);this.rootItems.fill(null);}}

var enemy_grid = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EnemyGrid: EnemyGrid,
    EnemyGridItem: EnemyGridItem
});

class EnemyAI{startup(enemy){}shutdown(enemy){enemy.setAIData(null);}update(enemy,dt){}}

var enemy_ai = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EnemyAI: EnemyAI
});

class PathProgress{reset(){this.segmentIndex=0;this.segmentT=0;}constructor(){this.reset();}}class Path{getPointFromProgress(pathProgress,p,dx=0,dy=0){this.getPoint(pathProgress.segmentIndex,pathProgress.segmentT,p,dx,dy);}getPoint(segmentIndex,segmentT,p,dx=0,dy=0){}getDerivativeFromProgress(pathProgress,d){this.getDerivative(pathProgress.segmentIndex,pathProgress.segmentT,d);}getDerivative(segmentIndex,segmentT,d){}getDerivative2FromProgress(pathProgress,d2){this.getDerivative2(pathProgress.segmentIndex,pathProgress.segmentT,d2);}getRightVec(){var d=new Vec2;this.getDerivative(0,0,d);Utils.normalizeVec2InPlace(d);d.set(-d.y,d.x);return d}getDerivative2(segmentIndex,segmentT,d2){}move(totalLength,pathProgress){return false}draw(game){}}

var path = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Path: Path,
    PathProgress: PathProgress
});

class FollowPathEnemyAIData{isWaiting(){return Utils.less(this.time,this.waitTime)}constructor(pathOffset=0,rightOffset=0){this.pathProgress=new PathProgress;this.time=0;this.position=new Vec2;this.positionOffset=new Vec2;this.direction=new Vec2;this.waitTime=0;this.pathOffset=pathOffset;this.rightOffset=rightOffset;}}class FollowPathEnemyAI extends EnemyAI{startup(enemy){var data=enemy.aiData;if(!data){data=new FollowPathEnemyAIData;enemy.setAIData(data);}var pathProgress=enemy.aiData.pathProgress;this.path.move(data.pathOffset,pathProgress);this.path.getPointFromProgress(pathProgress,data.position);this.path.getDerivativeFromProgress(pathProgress,data.direction);Utils.normalizeVec2InPlace(data.direction);enemy.setOrientationFromDirection(data.direction);data.positionOffset.set(-data.direction.y*data.rightOffset,data.direction.x*data.rightOffset);data.position.add(data.positionOffset);enemy.forcePosition(data.position);}update(enemy,dt){if(!enemy.isAlive()||!enemy.isMoving()){return}if(!Game.instance.isPlaying()){enemy.forceStop();return}var data=enemy.aiData;data.time+=dt;if(data.isWaiting()){return}var pathProgress=enemy.aiData.pathProgress;var moveLength=enemy.speed*dt;var finished=false;if(this.path.move(moveLength,pathProgress)){finished=true;}this.path.getPointFromProgress(pathProgress,data.position);this.path.getDerivativeFromProgress(pathProgress,data.direction);Utils.normalizeVec2InPlace(data.direction);this.tmpVec.set(-data.direction.y*data.rightOffset,data.direction.x*data.rightOffset);Utils.moveTowardsVec2InPlace(data.positionOffset,this.tmpVec,Constants.CURVE_OFFSET_MOVE_SPEED*dt);data.position.add(data.positionOffset);enemy.forceMoveToPosition(data.position,dt);if(finished){enemy.markDestroy();}}constructor(path){super();this.path=path;this.tmpVec=new Vec2;}}

var follow_path_enemy_ai = /*#__PURE__*/Object.freeze({
    __proto__: null,
    FollowPathEnemyAI: FollowPathEnemyAI,
    FollowPathEnemyAIData: FollowPathEnemyAIData
});

class BezierPathPoint{constructor(p,prevTangent,nextTangent){this.p=p;this.prevTangent=prevTangent;this.nextTangent=nextTangent;}}class BezierPathSegment{getPoint(t,p,dx=0,dy=0){var u=1-t;var t2=t*t;var u2=u*u;var startVal=u2*u;var endVal=t2*t;var control0Val=3*u2*t;var control1Val=3*u*t2;var totalVal=startVal+endVal+control0Val+control1Val;p.set(startVal*this.start.x+endVal*this.end.x+control0Val*this.control0.x+control1Val*this.control1.x+totalVal*dx,startVal*this.start.y+endVal*this.end.y+control0Val*this.control0.y+control1Val*this.control1.y+totalVal*dy);}getDerivative(t,d){var u=1-t;var t2=t*t;var u2=u*u;var ut=u*t;var startVal=-3*u2;var endVal=3*t2;var control0Val=3*u2-6*ut;var control1Val=6*ut-3*t2;d.set(startVal*this.start.x+endVal*this.end.x+control0Val*this.control0.x+control1Val*this.control1.x,startVal*this.start.y+endVal*this.end.y+control0Val*this.control0.y+control1Val*this.control1.y);}getDerivative2(t,d2){var u=1-t;var startVal=6*u;var endVal=6*t;var control0Val=6*t-12*u;var control1Val=6*u-12*t;d2.set(startVal*this.start.x+endVal*this.end.x+control0Val*this.control0.x+control1Val*this.control1.x,startVal*this.start.y+endVal*this.end.y+control0Val*this.control0.y+control1Val*this.control1.y);}draw(game,color){var t=0;var position=new Vec2;this.getPoint(t,position);var nextPosition=new Vec2;var derivativeVec=new Vec2;var ended=false;while(!ended){this.getDerivative(t,derivativeVec);var derivative=derivativeVec.length();var dt=Constants.CURVE_MOVE_DISTANCE/derivative;var nextT=t+dt;if(Utils.greaterOrEqual(nextT,1)){nextT=1;ended=true;}this.getPoint(nextT,nextPosition);game.drawLine(position,nextPosition,color);position.copy(nextPosition);t=nextT;}}constructor(start,end,control0,control1){this.start=start;this.end=end;this.control0=control0;this.control1=control1;this.straightLength=start.distance(end);}}class BezierPath extends Path{setupSegments(){var pointCount=this.points.length;if(pointCount<2)return;var segmentCount=pointCount-1;this.segments=[];for(var i=0;i<segmentCount;++i){var curPoint=this.points[i];var nextPoint=this.points[i+1];var start=curPoint.p.clone();var end=nextPoint.p.clone();var control0=start.clone();control0.add(curPoint.nextTangent);var control1=end.clone();control1.add(nextPoint.prevTangent);var segment=new BezierPathSegment(start,end,control0,control1);this.segments.push(segment);}}getPoint(segmentIndex,segmentT,p,dx=0,dy=0){this.segments[segmentIndex].getPoint(segmentT,p,dx,dy);}getDerivative(segmentIndex,segmentT,d){this.segments[segmentIndex].getDerivative(segmentT,d);}getDerivative2(segmentIndex,segmentT,d2){this.segments[segmentIndex].getDerivative2(segmentT,d2);}move(totalLength,pathProgress){return this.moveToPoint(totalLength,pathProgress,this.segments.length-1,1)}moveToPoint(totalLength,pathProgress,targetSegmentIndex,targetSegmentT){var derivativeVec=new Vec2;while(Utils.greater(totalLength,0)){var length=Math.min(totalLength,Constants.CURVE_MOVE_DISTANCE);this.getDerivative(pathProgress.segmentIndex,pathProgress.segmentT,derivativeVec);var derivative=derivativeVec.length();if(Utils.equal(derivative,0)){derivative=this.segments[pathProgress.segmentIndex].straightLength;}var dt=length/derivative;if(Utils.less(pathProgress.segmentT+dt,1)){pathProgress.segmentT+=dt;totalLength-=length;}else {length=(1-pathProgress.segmentT)*derivative;pathProgress.segmentIndex++;pathProgress.segmentT=0;}if(pathProgress.segmentIndex>targetSegmentIndex||pathProgress.segmentIndex==targetSegmentIndex&&Utils.greaterOrEqual(pathProgress.segmentT,targetSegmentT)){pathProgress.segmentIndex=targetSegmentIndex;pathProgress.segmentT=targetSegmentT;return true}totalLength-=length;}return false}draw(game,color){var segmentCount=this.segments.length;if(segmentCount==0)return;for(var i=0;i<segmentCount;++i){this.segments[i].draw(game,color);}}constructor(data){super();this.points=[];var offset=0;var pathCount=data.getUint16(offset,true);offset+=2;for(var i=0;i<pathCount;++i){var x=data.getFloat32(offset,true);offset+=4;var y=data.getFloat32(offset,true);offset+=4;var p=new Vec2(x,y);x=data.getFloat32(offset,true);offset+=4;y=data.getFloat32(offset,true);offset+=4;var prevTangent=new Vec2(x,y);x=data.getFloat32(offset,true);offset+=4;y=data.getFloat32(offset,true);offset+=4;var nextTangent=new Vec2(x,y);var point=new BezierPathPoint(p,prevTangent,nextTangent);this.points.push(point);}this.setupSegments();}}

var bezier_path = /*#__PURE__*/Object.freeze({
    __proto__: null,
    BezierPath: BezierPath
});

class EnemySpawner{loadData(data,offset){this.delayTime=data.getFloat32(offset,true);offset+=4;this.autoTrigger=!!data.getUint8(offset);offset++;return offset}setup(){}checkTrigger(){if(this.autoTrigger)return true;return false}startup(){}shutdown(){}update(dt){if(this.waitingStart){this.delayTime-=dt;if(Utils.lessOrEqual(this.delayTime,0)){this.waitingStart=false;}else {return}}this.time+=dt;this.updateRun(dt);}updateRun(dt){}hasEnded(){return false}constructor(data){this.time=0;this.waitingStart=true;this.loadData(data,0);this.setup();}}

var enemy_spawner = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EnemySpawner: EnemySpawner
});

class EnemyPathSpawner extends EnemySpawner{loadData(data,offset){offset=super.loadData(data,offset);this.pathId=data.getUint8(offset);offset++;this.path=Game.instance.getPath(this.pathId);this.items=[];var pointCount=data.getUint16(offset,true);offset+=2;for(var i=0;i<pointCount;++i){var id=data.getUint8(offset);offset++;var x=data.getFloat32(offset,true);offset+=4;var y=data.getFloat32(offset,true);offset+=4;var item={"id":id,"position":new Vec2(x,y)};this.items.push(item);}return offset}setup(){super.setup();this.itemCount=this.items.length;for(var i=0;i<this.itemCount;++i){var item=this.items[i];var id=item.id;var data=Game.instance.getEnemyData(id);var speed=1;if(data){speed=data.speed;}item.speed=speed;item.time=item.position.y/speed;}this.items.sort((a,b)=>a.time-b.time);this.itemPos=0;}hasEnded(){return this.itemPos>=this.itemCount}spawnEnemy(id,pathOffset,rightOffset){Game.instance.spawnPathEnemy(id,this.pathId,pathOffset,rightOffset);}startup(){var spawnLastIndex=-1;for(var i=0;i<this.itemCount;++i){var item=this.items[i];var time=item.time;if(time<=this.time){spawnLastIndex=i;}else {break}}for(var i=spawnLastIndex;i>=0;--i){var item=this.items[i];var distanceOffset=-item.position.y;this.spawnEnemy(item.id,distanceOffset,item.position.x);}this.itemPos=spawnLastIndex+1;}updateRun(dt){while(this.itemPos<this.itemCount){var item=this.items[this.itemPos];var time=item.time;if(time>this.time){break}var distanceOffset=(this.time-time)*item.speed;this.spawnEnemy(item.id,distanceOffset,item.position.x);this.itemPos++;}}}

var enemy_path_spawner = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EnemyPathSpawner: EnemyPathSpawner
});

class EnemyPointSpawner extends EnemySpawner{loadData(data,offset){offset=super.loadData(data,offset);this.items=[];var pointCount=data.getUint16(offset,true);offset+=2;for(var i=0;i<pointCount;++i){var id=data.getUint8(offset);offset++;var x=data.getFloat32(offset,true);offset+=4;var y=data.getFloat32(offset,true);offset+=4;var rotation=data.getFloat32(offset,true);offset+=4;var item={"id":id,"position":new Vec2(x,y),"rotation":rotation};this.items.push(item);}return offset}hasEnded(){return this.hasSpawned}startup(){this.hasSpawned=false;if(Utils.lessOrEqual(this.delayTime,0)){this.spawnItems();}}spawnItems(){if(this.hasSpawned)return;this.hasSpawned=true;var itemCount=this.items.length;itemCount=0;for(var i=0;i<itemCount;++i){var item=this.items[i];Game.instance.spawnPointEnemy(item.id,item.position,90-item.rotation);}}updateRun(dt){this.spawnItems();}}

var enemy_point_spawner = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EnemyPointSpawner: EnemyPointSpawner
});

function _define_property$s(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Transform2D{clone(){var ret=new Transform2D;ret.copy(this);return ret}copy(rhs){this.p=rhs.p;this.q=rhs.q;return this}transformPointVec(p){return this.transformPoint(p.x,p.y)}transformPoint(px,py){var x=this.q.x*px-this.q.y*py+this.p.x;var y=this.q.y*px+this.q.x*py+this.p.y;return new Vec2(x,y)}invTransformPointVec(p){return this.invTransformPoint(p.x,p.y)}invTransformPoint(px,py){var vx=px-this.p.x;var vy=py-this.p.y;var x=this.q.x*vx+this.q.y*vy;var y=-this.q.y*vx+this.q.x*vy;return new Vec2(x,y)}transformDirectionVec(d){return this.transformDirection(d.x,d.y)}transformDirection(dx,dy){var x=this.q.x*dx-this.q.y*dy;var y=this.q.y*dx+this.q.x*dy;return new Vec2(x,y)}invTransformDirectionVec(d){return this.invTransformDirection(d.x,d.y)}invTransformDirection(dx,dy){var x=this.q.x*dx+this.q.y*dy;var y=-this.q.y*dx+this.q.x*dy;return new Vec2(x,y)}constructor(position,rotation=0){this.p=position.clone();var angle=rotation*Constants.Deg2Rad;this.q=new Vec2(Math.cos(angle),Math.sin(angle));}}_define_property$s(Transform2D,"IDENTITY",Object.freeze(new Transform2D(Vec2.ZERO,0)));

var transform2d = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Transform2D: Transform2D
});

class ShapeType{}(()=>{ShapeType.CIRCLE=0;ShapeType.CAPSULE=1;ShapeType.SEGMENT=2;ShapeType.POLYGON=3;})();

var shape_type = /*#__PURE__*/Object.freeze({
    __proto__: null,
    ShapeType: ShapeType
});

function _define_property$r(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Box2DUtils{static setup(){Box2DUtils.b2Vec2_ZERO=new Box2D.b2Vec2(0,0);Box2DUtils.b2Rot_IDENTITY=Box2DUtils.b2Rot_create(1,0);Box2DUtils.b2Transform_IDENTITY=new Box2D.b2Transform(Box2DUtils.b2Vec2_ZERO,Box2DUtils.b2Rot_IDENTITY);}static b2Vec2_toPC(v){return new Vec2(v.get_x(),v.get_y())}static b2Vec2_create(x,y){return new Box2D.b2Vec2(x,y)}static b2Vec2_fromPC(v){return new Box2D.b2Vec2(v.x,v.y)}static b2Rot_create(c,s){var rot=new Box2D.b2Rot;rot.set_c(c);rot.set_s(s);return rot}static b2Rot_fromPC(v){var rot=new Box2D.b2Rot;rot.set_c(v.x);rot.set_s(v.y);return rot}static b2Transform_create(position,rotation){return new Box2D.b2Transform(Box2DUtils.b2Vec2_fromPC(position),new Box2D.b2Rot(rotation))}static b2Transform_fromPC(transform){var ret=new Box2D.b2Transform;ret.set_p(Box2DUtils.b2Vec2_fromPC(transform.p));ret.set_q(Box2DUtils.b2Vec2_fromPC(transform.q));return ret}static b2Color_toPC(color){var col=Box2D.wrapPointer(color,Box2D.b2Color);var r=col.get_r();var g=col.get_g();var b=col.get_b();return new Color(r,g,b)}}_define_property$r(Box2DUtils,"b2DrawFlag_shapeBit",1);_define_property$r(Box2DUtils,"b2DrawFlag_jointBit",2);_define_property$r(Box2DUtils,"b2DrawFlag_aabbBit",4);_define_property$r(Box2DUtils,"b2DrawFlag_pairBit",8);_define_property$r(Box2DUtils,"b2DrawFlag_centerOfMassBit",16);_define_property$r(Box2DUtils,"b2ShapeType_circle",0);_define_property$r(Box2DUtils,"b2ShapeType_edge",1);_define_property$r(Box2DUtils,"b2ShapeType_polygon",2);_define_property$r(Box2DUtils,"b2ShapeType_chain",3);_define_property$r(Box2DUtils,"b2ShapeType_typeCount",4);_define_property$r(Box2DUtils,"b2Vec2_ZERO",undefined);_define_property$r(Box2DUtils,"b2Rot_IDENTITY",undefined);_define_property$r(Box2DUtils,"b2Transform_IDENTITY",undefined);

var box2d_utils = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Box2DUtils: Box2DUtils
});

function _define_property$q(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Game extends Script{initialize(){Game.instance=this;Game.isReady=false;this.objectDestroyed=this.objectDestroyed.bind(this);this.setMoveLeft=this.setMoveLeft.bind(this);this.setMoveRight=this.setMoveRight.bind(this);this.setMoveUp=this.setMoveUp.bind(this);this.setMoveDown=this.setMoveDown.bind(this);this.once("destroy",this.objectDestroyed);this.moveLeft=false;this.moveRight=false;this.moveUp=false;this.moveDown=false;this.app.on("move:left",this.setMoveLeft);this.app.on("move:right",this.setMoveRight);this.app.on("move:up",this.setMoveUp);this.app.on("move:down",this.setMoveDown);this.world=null;this.joystick=this.joystickEntity.script.joystick;this.coinInfo=this.coinInfoEntity.script.coinInfo;this.gameCamera=this.gameCameraEntity.script.gameCamera;this.endScreenMap=new Map;var endScreenCount=this.endScreenEntities.length;for(var i=0;i<endScreenCount;++i){var endScreenEntity=this.endScreenEntities[i];var endScreenName=endScreenEntity.name;this.endScreenMap.set(endScreenName,endScreenEntity.script.endScreen);}this.move=Vec2.ZERO.clone();this.enemyGrid=new EnemyGrid(this.enemyGridWidth,this.enemyGridHeight,this.enemyGridCellSize,this.enemyGridOffset);this.actors=[];this.base=null;this.player=null;this.enemies=new Set;this.coinAmount=0;this.actorCount=0;this.actorCap=0;this.result=Game.RESULT_PLAYING;this.loadTemplates();this.loadData();this.loadPaths();this.enemyFollowPathAIMap=null;this.loadEnemySpawners();this.onUpdateCoin();this.sensorTypeMap=new Map;this.actorBodyMap=new Map;this.onBox2DDrawSegment=this.onBox2DDrawSegment.bind(this);this.onBox2DDrawPolygon=this.onBox2DDrawPolygon.bind(this);this.onBox2DDrawSolidPolygon=this.onBox2DDrawSolidPolygon.bind(this);this.onBox2DDrawCircle=this.onBox2DDrawCircle.bind(this);this.onBox2DDrawSolidCircle=this.onBox2DDrawSolidCircle.bind(this);this.onBox2DDrawTransform=this.onBox2DDrawTransform.bind(this);this.onBox2DBeginContact=this.onBox2DBeginContact.bind(this);this.onBox2DEndContact=this.onBox2DEndContact.bind(this);this.onBox2DPreSolve=this.onBox2DPreSolve.bind(this);this.onBox2DPostSolve=this.onBox2DPostSolve.bind(this);this.onBox2DLoaded=this.onBox2DLoaded.bind(this);WasmModule.getInstance("Box2D",this.onBox2DLoaded);}destroy(){if(!Game.isReady){return}this.app.off("move:left",this.setMoveLeft);this.app.off("move:right",this.setMoveRight);this.app.off("move:up",this.setMoveUp);this.app.off("move:down",this.setMoveDown);if(this.actors){for(var i=0;i<this.actorCount;++i){var actor=this.actors[i];actor.destroy();}this.actors=null;this.player=null;}this.actorCount=0;this.actorCap=0;if(this.enemyGrid){this.enemyGrid.destroy();this.enemyGrid=null;}if(this.world){Box2D.destroy(this.world);this.world=null;}Game.isReady=false;Game.instance=null;}objectDestroyed(){this.destroy();}showEndScreen(name){var endScreen=this.endScreenMap.get(name);if(!endScreen)return;endScreen.show();}setMoveLeft(value){this.moveLeft=value;}setMoveRight(value){this.moveRight=value;}setMoveUp(value){this.moveUp=value;}setMoveDown(value){this.moveDown=value;}static getWorld(){if(!Game.isReady)return null;return Game.instance.world}static getMove(){if(!Game.isReady)return Vec2.ZERO;return Game.instance.move}loadPaths(){this.pathArray=[];var pathCount=this.pathAssetArray.length;for(var i=0;i<pathCount;++i){var pathAsset=this.pathAssetArray[i];var path=this.loadPath(pathAsset);this.pathArray.push(path);}}loadPath(asset){var data=new DataView(asset.resource);var path=new BezierPath(data);return path}getPath(pathId){if(pathId<0||pathId>=this.pathArray.length)return null;return this.pathArray[pathId]}loadTemplates(){this.templateMap=new Map;var templateCount=this.templateArray.length;for(var i=0;i<templateCount;++i){var template=this.templateArray[i];this.templateMap.set(template.name,template);}}getTemplate(name){return this.templateMap.get(name)}loadData(){this.dataMap=new Map;if(!this.dataRootEntity)return;var dataEntities=this.dataRootEntity.children;var dataCount=dataEntities.length;for(var i=0;i<dataCount;++i){var dataEntity=dataEntities[i];var dataName=dataEntity.name;var data=dataEntity.script.scripts[0];this.dataMap.set(dataName,data);}this.enemyDataArray=[];var enemyCount=this.enemyNameArray.length;for(var i=0;i<enemyCount;++i){this.enemyDataArray.push(this.getData(this.enemyNameArray[i]));}}getData(name){return this.dataMap.get(name)}loadEnemyPathSpawner(asset){var data=new DataView(asset.resource);var spawner=new EnemyPathSpawner(data);return spawner}loadEnemyPointSpawner(asset){var data=new DataView(asset.resource);var spawner=new EnemyPointSpawner(data);return spawner}loadEnemySpawners(){this.pendingEnemySpawners=[];this.activeEnemySpawners=[];var spawnerCount=this.enemyPathSpawnerAssetArray.length;for(var i=0;i<spawnerCount;++i){var pathSpawner=this.loadEnemyPathSpawner(this.enemyPathSpawnerAssetArray[i]);this.pendingEnemySpawners.push(pathSpawner);}spawnerCount=this.enemyPointSpawnerAssetArray.length;for(var i=0;i<spawnerCount;++i){var pointSpawner=this.loadEnemyPointSpawner(this.enemyPointSpawnerAssetArray[i]);this.pendingEnemySpawners.push(pointSpawner);}}getOrCreateFollowPathEnemyAI(pathId){var enemyAI;if(this.enemyFollowPathAIMap===null){this.enemyFollowPathAIMap=new Map;}else {enemyAI=this.enemyFollowPathAIMap.get(pathId);if(enemyAI!==undefined)return enemyAI}var path=this.getPath(pathId);if(path){enemyAI=new FollowPathEnemyAI(path);}else {enemyAI=null;}this.enemyFollowPathAIMap.set(pathId,enemyAI);return enemyAI}addBox2DDebugSegment(p1,p2,color){color=new Color(1,0,0);this.box2DDebugSegments.push({"start":p1,"end":p2,"color":color});}addBox2DDebugCircle(p,r,color){color=new Color(1,0,0);this.box2DDebugCircles.push({"center":p,"radius":r,"color":color});}onBox2DDrawSegment(_p1,_p2,_color){var p1=Box2DUtils.b2Vec2_toPC(Box2D.wrapPointer(_p1,Box2D.b2Vec2));var p2=Box2DUtils.b2Vec2_toPC(Box2D.wrapPointer(_p2,Box2D.b2Vec2));var color=Box2DUtils.b2Color_toPC(_color);this.addBox2DDebugSegment(p1,p2,color);}onBox2DDrawPolygon(_vertices,_vertexCount,_color){if(_vertexCount<2)return;var color=Box2DUtils.b2Color_toPC(_color);var _lastVertex=Box2D.wrapPointer(_vertices,Box2D.b2Vec2);var _startVertex=_lastVertex;var p1,p2;for(var i=1;i<_vertexCount;++i){var _vertex=Box2D.wrapPointer(_vertices+i*8,Box2D.b2Vec2);p1=Box2DUtils.b2Vec2_toPC(_lastVertex);p2=Box2DUtils.b2Vec2_toPC(_vertex);this.addBox2DDebugSegment(p1,p2,color);_lastVertex=_vertex;}p1=Box2DUtils.b2Vec2_toPC(_lastVertex);p2=Box2DUtils.b2Vec2_toPC(_startVertex);this.addBox2DDebugSegment(p1,p2,color);}onBox2DDrawSolidPolygon(_vertices,_vertexCount,_color){this.onBox2DDrawPolygon(_vertices,_vertexCount,_color);}onBox2DDrawCircle(_center,_radius,_color){var center=Box2DUtils.b2Vec2_toPC(Box2D.wrapPointer(_center,Box2D.b2Vec2));var color=Box2DUtils.b2Color_toPC(_color);this.addBox2DDebugCircle(center,_radius,color);}onBox2DDrawSolidCircle(_center,_radius,_axis,_color){this.onBox2DDrawCircle(_center,_radius,_color);}onBox2DDrawTransform(_transform){}registerSensor(type,fixture){this.sensorTypeMap.set(fixture,type);}unregisterSensor(fixture){this.sensorTypeMap.delete(fixture);}getSensorType(fixture){var type=this.sensorTypeMap.get(fixture);if(type===undefined)return Game.SENSOR_UNKNOWN;return type}registerActorBody(actor,body){this.actorBodyMap.set(body,actor);}unregisterActorBody(body){this.actorBodyMap.delete(body);}getActorFromBody(body){var actor=this.actorBodyMap.get(body);if(actor===undefined)return null;return actor}onSensorEnter(fixtureA,fixtureB){var sensorType=this.getSensorType(fixtureA);switch(sensorType){case Game.SENSOR_COIN:this.onCoinCollected(this.getActorFromBody(fixtureB.GetBody()));break;case Game.SENSOR_TOWER:this.onTowerPlacementEnter(this.getActorFromBody(fixtureA.GetBody()));break;case Game.SENSOR_BASE:this.onBaseHit(this.getActorFromBody(fixtureB.GetBody()));}}onSensorExit(fixtureA,fixtureB){var sensorType=this.getSensorType(fixtureA);switch(sensorType){case Game.SENSOR_TOWER:this.onTowerPlacementExit(this.getActorFromBody(fixtureA.GetBody()));break}}onCoinCollected(coin){if(!coin)return;coin.onCollected();}onTowerPlacementEnter(tower){if(!tower)return;tower.onPlayerEnterPlacement();}onTowerPlacementExit(tower){if(!tower)return;tower.onPlayerExitPlacement();}onBaseHit(enemy){if(!enemy)return;enemy.onHitBase(this.base);}onBox2DBeginContact(_contact){var contact=Box2D.wrapPointer(_contact,Box2D.b2Contact);var fixtureA=contact.GetFixtureA();var fixtureB=contact.GetFixtureB();if(fixtureA.IsSensor()){this.onSensorEnter(fixtureA,fixtureB);return}if(fixtureB.IsSensor()){this.onSensorEnter(fixtureB,fixtureA);return}}onBox2DEndContact(_contact){var contact=Box2D.wrapPointer(_contact,Box2D.b2Contact);var fixtureA=contact.GetFixtureA();var fixtureB=contact.GetFixtureB();if(fixtureA.IsSensor()){this.onSensorExit(fixtureA,fixtureB);return}if(fixtureB.IsSensor()){this.onSensorExit(fixtureB,fixtureA);return}}onBox2DPreSolve(_contact,_oldManifold){}onBox2DPostSolve(_contact,_impulse){}onBox2DLoaded(instance){console.log("BOX 2D LOADED!!!");window["Box2D"]=instance;Box2DUtils.setup();this.world=new Box2D.b2World(Box2DUtils.b2Vec2_ZERO);this.box2DDebugSegments=[];this.box2DDebugCircles=[];var debugDraw=new Box2D.JSDraw;debugDraw.DrawSegment=this.onBox2DDrawSegment;debugDraw.DrawPolygon=this.onBox2DDrawPolygon;debugDraw.DrawSolidPolygon=this.onBox2DDrawSolidPolygon;debugDraw.DrawCircle=this.onBox2DDrawCircle;debugDraw.DrawSolidCircle=this.onBox2DDrawSolidCircle;debugDraw.SetFlags(Box2DUtils.b2DrawFlag_shapeBit);this.world.SetDebugDraw(debugDraw);var listener=new Box2D.JSContactListener;listener.BeginContact=this.onBox2DBeginContact;listener.EndContact=this.onBox2DEndContact;listener.PreSolve=this.onBox2DPreSolve;listener.PostSolve=this.onBox2DPostSolve;this.world.SetContactListener(listener);this.loadStaticColliders();}loadStaticColliders(){var data=new DataView(this.colliderAsset.resource);var offset=0;var colliderCount=data.getUint16(offset,true);offset+=2;for(var i=0;i<colliderCount;++i){var x=data.getFloat32(offset,true);offset+=4;var y=data.getFloat32(offset,true);offset+=4;var rotation=data.getFloat32(offset,true);offset+=4;var transform=new Transform2D(new Vec2(x,y),-rotation);data.getUint8(offset);offset++;var shapeType=data.getUint8(offset);offset++;switch(shapeType){case ShapeType.SEGMENT:{var x1=data.getFloat32(offset,true);offset+=4;var y1=data.getFloat32(offset,true);offset+=4;var x2=data.getFloat32(offset,true);offset+=4;var y2=data.getFloat32(offset,true);offset+=4;this.addStaticSegmentCollider(transform,new Vec2(x1,y1),new Vec2(x2,y2));}break;case ShapeType.CIRCLE:{var x=data.getFloat32(offset,true);offset+=4;var y=data.getFloat32(offset,true);offset+=4;var radius=data.getFloat32(offset,true);offset+=4;this.addStaticCircleCollider(transform,new Vec2(x,y),radius);}break;case ShapeType.CAPSULE:{var x1=data.getFloat32(offset,true);offset+=4;var y1=data.getFloat32(offset,true);offset+=4;var x2=data.getFloat32(offset,true);offset+=4;var y2=data.getFloat32(offset,true);offset+=4;var radius=data.getFloat32(offset,true);offset+=4;this.addStaticCapsuleCollider(transform,new Vec2(x1,y1),new Vec2(x2,y2),radius);}break;case ShapeType.POLYGON:{var pointCount=data.getUint8(offset);offset++;var points=[];for(var j=0;j<pointCount;++j){var x=data.getFloat32(offset,true);offset+=4;var y=data.getFloat32(offset,true);offset+=4;points.push(new Vec2(x,y));}var radius=data.getFloat32(offset,true);offset+=4;this.addStaticPolygonCollider(transform,points,radius);}break}}}createStaticBody(){var bodyDef=new Box2D.b2BodyDef;bodyDef.set_type(Box2D.b2_staticBody);return this.world.CreateBody(bodyDef)}createStaticFixture(body,shape){var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_STATIC_CATEGORY);filter.set_maskBits(Constants.SHAPE_STATIC_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(shape);fixtureDef.set_friction(Constants.BODY_DEFAULT_FRICTION);fixtureDef.set_filter(filter);return body.CreateFixture(fixtureDef)}addStaticSegmentCollider(transform,point1,point2){var body=this.createStaticBody();point1=transform.transformPoint(point1.x,point1.y);point2=transform.transformPoint(point2.x,point2.y);var length=point1.distance(point2);var segmentShape=new Box2D.b2EdgeShape;var p1=new Box2D.b2Vec2(-length*.5,0);var p2=new Box2D.b2Vec2(length*.5,0);segmentShape.Set(p1,p2);this.createStaticFixture(body,segmentShape);var position=new Vec2((point1.x+point2.x)*.5,(point1.y+point2.y)*.5);var rotation=Math.atan2(point2.y-point1.y,point2.x-point1.x);body.SetTransform(Box2DUtils.b2Vec2_fromPC(position),rotation);return body}addStaticCapsuleCollider(transform,center1,center2,radius){var body=this.createStaticBody();center1=transform.transformPoint(center1.x,center1.y);center2=transform.transformPoint(center2.x,center2.y);var length=center1.distance(center2);var capsuleShape=new Box2D.b2EdgeShape;var p1=new Box2D.b2Vec2(-length*.5,0);var p2=new Box2D.b2Vec2(length*.5,0);capsuleShape.Set(p1,p2);capsuleShape.set_m_radius(radius);this.createStaticFixture(body,capsuleShape);var position=new Vec2((center1.x+center2.x)*.5,(center1.y+center2.y)*.5);var rotation=Math.atan2(center2.y-center1.y,center2.x-center1.x);body.SetTransform(Box2DUtils.b2Vec2_fromPC(position),rotation);return body}addStaticCircleCollider(transform,center,radius){var body=this.createStaticBody();center=transform.transformPoint(center.x,center.y);var circleShape=new Box2D.b2CircleShape;circleShape.set_m_radius(radius);circleShape.set_m_p(Box2DUtils.b2Vec2_fromPC(center));this.createStaticFixture(body,circleShape);return body}addStaticPolygonCollider(transform,vertices,radius=0){var body=this.createStaticBody();var vertexCount=vertices.length;var buffer=Box2D._malloc(vertexCount*8);var offset=0;for(var i=0;i<vertexCount;++i){var p=transform.transformPoint(vertices[i].x,vertices[i].y);Box2D.HEAPF32[buffer+offset>>2]=p.x;Box2D.HEAPF32[buffer+(offset+4)>>2]=p.y;offset+=8;}var polygonShape=new Box2D.b2PolygonShape;var ptr_wrapped=Box2D.wrapPointer(buffer,Box2D.b2Vec2);polygonShape.Set(ptr_wrapped,vertexCount);polygonShape.set_m_radius(radius);this.createStaticFixture(body,polygonShape);return body}addStaticAABBCollider(x0,y0,x1,y1){var body=this.createStaticBody();var hx=Math.abs(x1-x0)*.5;var hy=Math.abs(y1-y0)*.5;var cx=(x0+x1)*.5;var cy=(y0+y1)*.5;var polygonShape=new Box2D.b2PolygonShape;polygonShape.SetAsBox(hx,hy,new Box2D.b2Vec2(cx,cy),0);this.createStaticFixture(body,polygonShape);return body}addStaticOBBCollider(center,width,height,angle=0){var body=this.createStaticBody();var hx=width*.5;var hy=height*.5;var polygonShape=new Box2D.b2PolygonShape;polygonShape.SetAsBox(hx,hy);this.createStaticFixture(body,polygonShape);body.SetTransform(Box2DUtils.b2Vec2_fromPC(center),-angle*Constants.Deg2Rad);return body}update(dt){if(!Game.isReady){if(this.world!=null){Game.isReady=true;this.initializeActors();}else {return}}this.updateEnemySpawners(dt);this.updateInput(dt);this.updatePhysics(dt);this.updateActors(dt);if(this.isPlaying()){if(this.checkWin()){this.win();}else if(this.checkLose()){this.lose();}}}isPlaying(){return this.result===Game.RESULT_PLAYING}checkWin(){return !this.hasEnemy()}checkLose(){if(!this.player||!this.player.isAlive())return true;if(!this.base||!this.base.isAlive)return true;return false}win(){this.result=Game.RESULT_WIN;this.showEndScreen("Victory");}lose(){this.result=Game.RESULT_LOSE;this.showEndScreen("Defeat");}openStore(){window.open(this.storeURL);}hasEnemySpawners(){return this.pendingEnemySpawners.length>0||this.activeEnemySpawners.length}hasEnemy(){return this.hasEnemySpawners()||this.enemies.size>0}updateEnemySpawners(dt){var spawnerCount=this.pendingEnemySpawners.length;var newSpawnerCount=0;for(var i=0;i<spawnerCount;++i){var spawner=this.pendingEnemySpawners[i];if(spawner.checkTrigger()){spawner.startup();if(!spawner.hasEnded()){this.activeEnemySpawners.push(spawner);}}else {this.pendingEnemySpawners[newSpawnerCount++]=spawner;}}if(newSpawnerCount<spawnerCount){for(var i=newSpawnerCount;i<spawnerCount;++i){this.pendingEnemySpawners[i]=null;}this.pendingEnemySpawners.length=newSpawnerCount;}spawnerCount=this.activeEnemySpawners.length;var newSpawnerCount=0;for(var i=0;i<spawnerCount;++i){var spawner=this.activeEnemySpawners[i];spawner.update(dt);if(spawner.hasEnded()){spawner.shutdown();}else {this.activeEnemySpawners[newSpawnerCount++]=spawner;}}if(newSpawnerCount<spawnerCount){for(var i=newSpawnerCount;i<spawnerCount;++i){this.activeEnemySpawners[i]=null;}this.activeEnemySpawners.length=newSpawnerCount;}}findGridEnemyInCircle(position,radius,func){this.enemyGrid.processEnemyInCircle(position,radius+Constants.CHARACTER_MAX_RADIUS,func);}updatePhysics(dt){this.world.Step(1/60,6,2);}updateInput(dt){this.move.set(0,0);if(!this.isPlaying()){return}if(this.joystick){this.move.add(this.joystick.move);}if(this.moveUp){this.move.add(Vec2.UP);}if(this.moveDown){this.move.add(Vec2.DOWN);}if(this.moveLeft){this.move.add(Vec2.LEFT);}if(this.moveRight){this.move.add(Vec2.RIGHT);}Utils.normalizeVec2InPlace(this.move);}setBase(base){this.base=base;if(base){base.setEntityPosition(this.basePoint.getPosition());base.setEntityRotation(this.basePoint.getRotation());}}setPlayer(player){this.player=player;if(player){player.setEntityPosition(this.playerPoint.getPosition());player.setEntityRotation(this.playerPoint.getRotation());}this.gameCamera.setFollowActor(player);}addEnemy(enemy){this.enemies.add(enemy);}removeEnemy(enemy){this.enemies.delete(enemy);}registerActor(actor){if(this.actorCount<this.actorCap){this.actors[this.actorCount++]=actor;}else {this.actorCount++;this.actorCap++;this.actors.push(actor);}if(Game.isReady){actor.initializeActor();}}initializeActors(){if(this.actorCount===0)return;for(var i=0;i<this.actorCount;++i){var actor=this.actors[i];actor.initializeActor();}}destroyActor(actor){actor.destroy();}updateActors(dt){if(this.actorCount===0)return;var newActorCount=0;for(var i=0;i<this.actorCount;++i){var actor=this.actors[i];actor.updateActor(dt);if(!actor.isValid){this.destroyActor(actor);continue}this.actors[newActorCount++]=actor;}if(newActorCount<this.actorCount){for(var i=newActorCount;i<this.actorCount;++i){this.actors[i]=null;}this.actorCount=newActorCount;}}getEnemyData(id){if(id<0||id>=this.enemyDataArray.length)return null;return this.enemyDataArray[id]}spawnPathEnemy(id,pathId,pathOffset=0,rightOffset=0){var data=this.getEnemyData(id);if(!data)return null;var instance=data.template.resource.instantiate();var enemy=instance.script.enemy;enemy.physicsCategory=Constants.SHAPE_ENEMY_PATH_CATEGORY;enemy.physicsMask=Constants.SHAPE_ENEMY_PATH_MASK;enemy.isKinematic=true;enemy.registerActorBody=true;var ai=this.getOrCreateFollowPathEnemyAI(pathId);enemy.setAI(ai);var aiData=new FollowPathEnemyAIData(pathOffset,rightOffset);enemy.setAIData(aiData);this.enemyRootEntity.addChild(instance);return enemy}spawnPointEnemy(id,position,orientation){var data=this.getEnemyData(id);if(!data)return null;var instance=data.template.resource.instantiate();instance.setLocalPosition(Utils.getPosition3D(position));instance.setLocalRotation(Utils.getRotationFromOrientation(orientation));var enemy=instance.script.enemy;this.enemyRootEntity.addChild(instance);return enemy}spawnProjectile(name,position,height,orientation){var data=this.getData(name);if(!data)return;var instance=data.template.resource.instantiate();instance.setLocalPosition(Utils.getPosition3D(position,height));instance.setLocalRotation(Utils.getRotationFromOrientation(orientation));var projectile=instance.script.projectile;this.projectileRootEntity.addChild(instance);return projectile}spawnDropCoin(startPosition,startHeight,dropPosition,amount){var data=this.getData(this.coinName);if(!data)return;var instance=data.template.resource.instantiate();instance.setLocalPosition(Utils.getPosition3D(startPosition,startHeight));var dropMaxHeight=Constants.COIN_DROP_MAX_Y;var coin=instance.script.coin;coin.setDropData(dropPosition,dropMaxHeight,amount);coin.setPaying(false,null);this.pickupRootEntity.addChild(instance);return coin}spawnTowerPayCoin(startPosition,startHeight,tower,amount){var data=this.getData(this.coinName);if(!data)return;var instance=data.template.resource.instantiate();instance.setLocalPosition(Utils.getPosition3D(startPosition,startHeight));var dropPosition=tower.getPosition();var dropMaxHeight=Constants.COIN_PAY_MAX_Y;var coin=instance.script.coin;coin.setDropData(dropPosition,dropMaxHeight,amount);coin.setPaying(true,tower);this.pickupRootEntity.addChild(instance);return coin}spawnEffect(name,position,height,autoPlay=true){var template=this.getTemplate(name);if(!template)return;var instance=template.resource.instantiate();instance.setLocalPosition(Utils.getPosition3D(position,height));var effect=instance.script.effect;this.effectRootEntity.addChild(instance);if(autoPlay){effect.play();}return effect}onUpdateCoin(){this.coinInfo.setAmount(this.coinAmount);}gainCoin(amount){this.coinAmount+=amount;this.onUpdateCoin();}useCoin(amount){this.coinAmount=Math.max(this.coinAmount-amount,0);this.onUpdateCoin();}drawLine(start,end,color){this.app.drawLine(Utils.getPosition3D(start),Utils.getPosition3D(end),color,false);}drawCircle(center,radius,color){var len=2*Math.PI*radius;var segmentCount=Math.ceil(len/Constants.DEBUG_DRAW_MIN_LENGTH);var angle=0;var lastPoint=new Vec2(Math.cos(angle)*radius+center.x,Math.sin(angle)*radius+center.y);var point=new Vec2;for(var i=1;i<=segmentCount;++i){angle=2*Math.PI*i/segmentCount;point.set(Math.cos(angle)*radius+center.x,Math.sin(angle)*radius+center.y);this.drawLine(lastPoint,point,color);lastPoint.copy(point);}}drawDebugPhysics(){this.world.DrawDebugData();var segmentCount=this.box2DDebugSegments.length;for(var i=0;i<segmentCount;++i){var segment=this.box2DDebugSegments[i];var start=segment.start;var end=segment.end;var color=segment.color;this.drawLine(start,end,color);}var circleCount=this.box2DDebugCircles.length;for(var i=0;i<circleCount;++i){var circle=this.box2DDebugCircles[i];var center=circle.center;var radius=circle.radius;var color=circle.color;this.drawCircle(center,radius,color);}this.box2DDebugSegments.length=0;this.box2DDebugCircles.length=0;}drawDebugPaths(){var color=new Color(1,0,0);var pathCount=this.pathArray.length;for(var i=0;i<pathCount;++i){var path=this.pathArray[i];path.draw(this,color);}}drawDebug(){this.drawDebugPhysics();this.drawDebugPaths();}postUpdate(dt){if(!Game.isReady)return;this.drawDebug();for(var i=0;i<this.actorCount;++i){var actor=this.actors[i];if(!actor.isValid)continue;actor.postUpdateActor(dt);}}constructor(...args){super(...args);_define_property$q(this,"storeURL","");_define_property$q(this,"joystickEntity",void 0);_define_property$q(this,"coinInfoEntity",void 0);_define_property$q(this,"gameCameraEntity",void 0);_define_property$q(this,"endScreenEntities",void 0);_define_property$q(this,"basePoint",void 0);_define_property$q(this,"playerPoint",void 0);_define_property$q(this,"enemyGridOffset",void 0);_define_property$q(this,"enemyGridCellSize",2);_define_property$q(this,"enemyGridWidth",10);_define_property$q(this,"enemyGridHeight",10);_define_property$q(this,"coinName","coin");_define_property$q(this,"colliderAsset",void 0);_define_property$q(this,"dataRootEntity",void 0);_define_property$q(this,"templateArray",void 0);_define_property$q(this,"pathAssetArray",void 0);_define_property$q(this,"enemyPathSpawnerAssetArray",void 0);_define_property$q(this,"enemyPointSpawnerAssetArray",void 0);_define_property$q(this,"enemyNameArray",void 0);_define_property$q(this,"enemyRootEntity",void 0);_define_property$q(this,"projectileRootEntity",void 0);_define_property$q(this,"pickupRootEntity",void 0);_define_property$q(this,"effectRootEntity",void 0);}}_define_property$q(Game,"scriptName","game");_define_property$q(Game,"isReady",false);_define_property$q(Game,"instance",null);(()=>{Game.RESULT_PLAYING=-1;Game.RESULT_WIN=0;Game.RESULT_LOSE=1;})();(()=>{Game.SENSOR_UNKNOWN=-1;Game.SENSOR_COIN=0;Game.SENSOR_TOWER=1;Game.SENSOR_BASE=2;})();

var game = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Game: Game
});

function _define_property$p(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Actor extends Script{initialize(){this.isValid=false;}postInitialize(){Game.instance.registerActor(this);}getLookAtDirection(other){var otherPosition=other.getPosition();var direction=new Vec2(otherPosition.x-this.position.x,otherPosition.y-this.position.y);Utils.normalizeVec2InPlace(direction);return direction}getLookAtOrientation(other){var otherPosition=other.getPosition();var direction=new Vec2(otherPosition.x-this.position.x,otherPosition.y-this.position.y);return Utils.getOrientationFromDirection(direction)}getDistanceToOther(other){return this.position.distance(other.position)}getEdgeDistanceToOther(other){return Math.max(this.getDistanceToOther(other)-other.radius,0)}setEntityPosition(p){return this.entity.setLocalPosition(p)}setEntityRotation(r){return this.entity.setLocalRotation(r)}getEntityPosition(){return this.entity.getLocalPosition()}getOrientation(){return this.orientation}setPosition(p){this.position.copy(p);}getPosition(){return this.position}setOrientation(o){this.orientation=o;}setOrientationFromDirection(direction){this.orientation=Utils.getOrientationFromDirection(direction,this.orientation);}markDestroy(){this.isValid=false;}destroy(){if(this.isDestroyed)return;this.isValid=false;this.isDestroyed=true;this.deinitializeActor();this.entity.destroy();}deinitializeActor(){this.clearData();this.clearPhysics();}clearData(){}clearPhysics(){}initializeActor(){this.isValid=true;this.isDestroyed=false;this.setupData();this.setupPhysics();}setupData(){this.data=Game.instance.getData(this.dataName);this.syncData();this.position=Utils.getPosition2D(this.entity.getLocalPosition());this.orientation=90-Utils.guessRotation(this.entity.getLocalRotation());}syncData(){}setupPhysics(){}updateActor(dt){this.updatePhysics(dt);this.updateState(dt);this.updateDisplay(dt);}postUpdateActor(dt){}updatePhysics(dt){}setState(newState,force=false){if(newState===this.state&&!force)return;this.onStateExit(this.state,newState);this.prevState=this.state;this.state=newState;this.onStateEnter(this.state,this.prevState);}onStateEnter(state,prevState){}onStateExit(state,newState){}updateState(dt){}updateDisplay(dt){this.setEntityPosition(Utils.getPosition3D(this.position));this.setEntityRotation(Utils.getRotationFromOrientation(this.orientation));}constructor(...args){super(...args);_define_property$p(this,"dataName","");}}_define_property$p(Actor,"scriptName","actor");

var actor = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Actor: Actor
});

function _define_property$o(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Character extends Actor{getCharacterType(){return Character.TYPE_UNKNOWN}initialize(){super.initialize();this.animationLayer=this.entity.anim.baseLayer;}playSFX(name){this.entity.sound.play(name);}setVelocity(v){this.velocity.copy(v);}setTargetVelocity(v){this.targetVelocity.copy(v);}setTargetVelocityFromDirection(direction){this.targetVelocity.copy(direction);this.targetVelocity.mulScalar(this.speed);}getBodyPosition(){return Box2DUtils.b2Vec2_toPC(this.body.GetPosition())}setBodyPosition(p){this.body.SetTransform(Box2DUtils.b2Vec2_fromPC(p),0);}getBodyVelocity(){return Box2DUtils.b2Vec2_toPC(this.body.GetLinearVelocity())}setBodyVelocity(v){this.body.SetLinearVelocity(Box2DUtils.b2Vec2_fromPC(v));}addBodyVelocity(v){var bodyVelocity=this.getBodyVelocity().add(v);bodyVelocity=Utils.clampMagnitudeVec2(bodyVelocity,Constants.CHARACTER_MAX_SPEED);this.setBodyVelocity(bodyVelocity);}forceVelocity(velocity){this.setVelocity(velocity);this.setBodyVelocity(velocity);}getPhysicsCategory(){return this.physicsCategory}getPhysicsMask(){return this.physicsMask}getGroundDamping(){return this.groundDamping}setupPhysics(){super.setupPhysics();if(this.disablePhysics){this.body=null;return}var bodyDef=new Box2D.b2BodyDef;bodyDef.set_type(this.isKinematic?Box2D.b2_kinematicBody:Box2D.b2_dynamicBody);bodyDef.set_linearDamping(this.getGroundDamping());bodyDef.set_fixedRotation(true);this.body=Game.getWorld().CreateBody(bodyDef);var circleShape=new Box2D.b2CircleShape;circleShape.set_m_radius(this.radius);var filter=new Box2D.b2Filter;filter.set_categoryBits(this.getPhysicsCategory());filter.set_maskBits(this.getPhysicsMask());var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(circleShape);fixtureDef.set_friction(Constants.BODY_DEFAULT_FRICTION);fixtureDef.set_filter(filter);this.body.CreateFixture(fixtureDef);var massData=new Box2D.b2MassData;massData.set_mass(this.mass);this.body.SetMassData(massData);this.body.SetTransform(Box2DUtils.b2Vec2_fromPC(this.position),0);this.body.SetLinearVelocity(Box2DUtils.b2Vec2_ZERO);if(this.registerActorBody){Game.instance.registerActorBody(this,this.body);}}clearPhysics(){if(this.body){if(this.registerActorBody){Game.instance.unregisterActorBody(this.body);}Game.getWorld().DestroyBody(this.body);this.body=null;}super.clearPhysics();}isAlive(){if(!this.isValid)return false;return this.state!=Character.STATE_DIE}syncData(){this.radius=this.data.radius;this.targetHeight=this.data.targetHeight;this.mass=this.data.mass;this.speed=this.data.speed;this.acceleration=this.data.acceleration;this.maxHealth=this.data.maxHealth;this.damage=this.data.damage;this.animationTransitionDataName=this.data.animationTransitionDataName;}setupData(){super.setupData();if(this.groundDamping===null){this.groundDamping=Constants.CHARACTER_GROUND_DAMPING;}this.velocity=Vec2.ZERO.clone();this.targetVelocity=Vec2.ZERO.clone();this.state=Character.STATE_MOVE;this.prevState=this.state;this.animation=Character.ANIMATION_IDLE;this.prevAnimation=this.animation;this.animationTransitionData=Game.instance.getData(this.animationTransitionDataName);this.health=this.maxHealth;}updateActor(dt){super.updateActor(dt);}postUpdateActor(dt){super.postUpdateActor(dt);}updatePhysics(dt){if(!this.body){return}var bodyPosition=this.getBodyPosition();this.setPosition(bodyPosition);if(this.isKinematic){return}var bodyVelocity=Utils.clampMagnitudeVec2(this.getBodyVelocity(),Constants.CHARACTER_MAX_SPEED);if(Utils.isZeroVec2(this.targetVelocity)){if(Utils.isZeroVec2(bodyVelocity)){this.forceVelocity(Vec2.ZERO);}else {var bodySpeed=bodyVelocity.length();var bodyDirection=bodyVelocity.clone().divScalar(bodySpeed);bodySpeed=Math.max(bodySpeed-this.acceleration*dt,0);bodyVelocity=bodyDirection*bodySpeed;this.forceVelocity(bodyVelocity);}}else {var targetSpeed=this.targetVelocity.length();var forward=this.targetVelocity.clone().divScalar(targetSpeed);var right=new Vec2(forward.y,-forward.x);var forwardSpeed=bodyVelocity.dot(forward);var rightSpeed=bodyVelocity.dot(right);forwardSpeed=Utils.moveTowards(forwardSpeed,targetSpeed,this.acceleration*dt);forward.mulScalar(forwardSpeed);right.mulScalar(rightSpeed);forward.add(right);bodyVelocity=Utils.clampMagnitudeVec2(forward,Constants.CHARACTER_MAX_SPEED);this.forceVelocity(bodyVelocity);}}updateState(dt){switch(this.state){case Character.STATE_MOVE:this.updateMove(dt);break;case Character.STATE_ATTACK:this.updateAttack(dt);break;case Character.STATE_DIE:this.updateDie(dt);break}}onStateEnter(state,prevState){switch(state){case Character.STATE_MOVE:this.beginMove();break;case Character.STATE_ATTACK:this.beginAttack();break;case Character.STATE_DIE:this.beginDie();break}}onStateExit(state,newState){switch(state){case Character.STATE_MOVE:this.endMove();break;case Character.STATE_ATTACK:this.endAttack();break;case Character.STATE_DIE:this.endDie();break}}isMoving(){return this.state===Character.STATE_MOVE}move(){this.setState(Character.STATE_MOVE);}attack(){this.setState(Character.STATE_ATTACK,true);}die(){this.setState(Character.STATE_DIE);}beginMove(){}endMove(){}updateMove(dt){}beginAttack(){}endAttack(){}updateAttack(dt){}beginDie(){this.clearPhysics();this.playAnimation(Character.ANIMATION_DIE);}endDie(){}updateDie(dt){if(this.isAtEndAnimation()){this.markDestroy();}}forceStop(){this.playAnimation(Character.ANIMATION_IDLE);this.forceVelocity(Vec2.ZERO);this.setTargetVelocity(Vec2.ZERO);}forcePosition(newPosition){this.setPosition(newPosition);this.setBodyPosition(newPosition);}forceMoveToPosition(newPosition,dt){var move=newPosition.clone();if(!this.body){move.sub(this.getPosition());this.setPosition(newPosition);}else {move.sub(this.getBodyPosition());}if(Utils.greater(dt,0)){move.divScalar(dt);}else {move.set(0,0);}this.forceVelocity(move);this.setTargetVelocity(move);if(Utils.isZeroVec2(move)){this.playAnimation(Character.ANIMATION_IDLE);}else {this.setOrientationFromDirection(move);this.playAnimation(Character.ANIMATION_RUN);}}getAnimationTransitionDuration(start,end){if(!this.animationTransitionData)return 0;return this.animationTransitionData.getTranstitionDuration(start,end)}playAnimation(newAnimation,force=false){if(newAnimation===this.animation&&!force)return;var duration=this.getAnimationTransitionDuration(this.animation,newAnimation);this.animation=newAnimation;this.animationLayer.transition(Character.ANIMATION_NAMES[this.animation],duration,0);}isAtEndAnimation(){if(this.animationLayer.transitioning)return false;return this.animationLayer.activeStateProgress>=1}updateDisplay(dt){super.updateDisplay(dt);}takeHit(damage,hitOrientation){this.health-=damage;if(Utils.lessOrEqual(this.health,0)){this.health=0;this.die();}}constructor(args){super(args);this.disablePhysics=false;this.registerActorBody=false;this.isKinematic=false;this.physicsCategory=null;this.physicsMask=null;this.groundDamping=null;}}_define_property$o(Character,"scriptName","character");(()=>{Character.TYPE_UNKNOWN=-1;Character.TYPE_PLAYER=0;Character.TYPE_ENEMY=1;})();(()=>{Character.STATE_MOVE=0;Character.STATE_ATTACK=1;Character.STATE_DIE=2;})();(()=>{Character.ANIMATION_IDLE=0;Character.ANIMATION_RUN=1;Character.ANIMATION_ATTACK=2;Character.ANIMATION_DIE=3;})();_define_property$o(Character,"ANIMATION_NAMES",["Idle","Run","Attack","Die"]);

var character = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Character: Character
});

function _define_property$n(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Player extends Character{getCharacterType(){return Character.TYPE_PLAYER}initialize(){super.initialize();this.onAutoAttackCandidateDetected=this.onAutoAttackCandidateDetected.bind(this);this.animationTopLayer=this.entity.anim.findAnimationLayer("Top");this.fireArrow=this.fireArrow.bind(this);this.shout=this.shout.bind(this);this.willFireArrow=false;this.entity.anim.on("fireArrow",this.fireArrow);this.entity.anim.on("shout",this.shout);}initializeActor(){Game.instance.setPlayer(this);super.initializeActor();}setupData(){super.setupData();if(this.physicsCategory===null){this.physicsCategory=Constants.SHAPE_PLAYER_CATEGORY;}if(this.physicsMask===null){this.physicsMask=Constants.SHAPE_PLAYER_MASK;}this.attackOrientationOffset=0;this.hasTopAnimation=false;this.nearestTargetDistance=Constants.INF;this.attackTarget=null;this.time=0;this.towerPayOperationArray=[];this.hasMoved=false;this.shoutSFXStartCount=Constants.PLAYER_SHOUT_SFX_START_COUNT;this.shoutSFXStartTime=Constants.PLAYER_SHOUT_SFX_START_TIME;this.shoutSFXStartDelay=Constants.PLAYER_SHOUT_SFX_START_DELAY;}syncData(){super.syncData();this.attackRange=this.data.attackRange;this.coinDetectRange=this.data.coinDetectRange;this.projectileName=this.data.projectileName;}setupPhysics(){super.setupPhysics();if(this.body){this.body.SetSleepingAllowed(false);var circleShape=new Box2D.b2CircleShape;circleShape.set_m_radius(this.coinDetectRange);var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_PICKUP_DETECTOR_CATEGORY);filter.set_maskBits(Constants.SHAPE_PICKUP_DETECTOR_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(circleShape);fixtureDef.set_isSensor(true);fixtureDef.set_filter(filter);this.sensorFixture=this.body.CreateFixture(fixtureDef);Game.instance.registerSensor(Game.SENSOR_COIN,this.sensorFixture);}}clearPhysics(){if(this.sensorFixture){Game.instance.unregisterSensor(this.sensorFixture);this.body.DestroyFixture(this.sensorFixture);this.sensorFixture=null;}super.clearPhysics();}beginMove(){this.updateMoveFromInput();}beginAttack(){this.beginTopAnimation();this.playAttackTopAnimation();this.updateMoveFromInput();this.updateAttackOrientationOffset();}endAttack(){this.endTopAnimation();}beginTopAnimation(){this.hasTopAnimation=true;this.animationTopLayer.weight=1;}endTopAnimation(){this.hasTopAnimation=false;this.animationTopLayer.weight=0;}isAtEndTopAnimation(){if(this.animationTopLayer.transitioning)return false;return this.animationTopLayer.activeStateProgress>=1}playAttackTopAnimation(){this.animationTopLayer.play("Attack");}updateAttackOrientationOffset(){if(!this.attackTarget||!this.attackTarget.isAlive())return;var attackOrientation=this.getLookAtOrientation(this.attackTarget);this.attackOrientationOffset=attackOrientation-this.orientation;}postUpdateActor(dt){if(this.hasTopAnimation){this.splineBoneEntity.rotate(0,-this.attackOrientationOffset,0);}if(this.willFireArrow){this.willFireArrow=false;if(this.attackTarget&&this.attackTarget.isAlive()){var attackPosition3D=this.arrowDummyPoint.getPosition();var attackPosition=Utils.getPosition2D(attackPosition3D);var attackHeight=attackPosition3D.y;var attackOrientation=this.getLookAtOrientation(this.attackTarget);var projectile=Game.instance.spawnProjectile(this.projectileName,attackPosition,attackHeight,attackOrientation);if(projectile){projectile.target=this.attackTarget;projectile.damage=this.damage;}}}}updateMove(dt){this.updateMoveFromInput();if(!Game.instance.isPlaying())return;this.checkAutoAttackTarget();if(this.attackTarget!==null){this.attack();}}checkAutoAttackTarget(){this.nearestTargetDistance=Constants.INF;this.attackTarget=null;Game.instance.findGridEnemyInCircle(this.position,this.attackRange,this.onAutoAttackCandidateDetected);}onAutoAttackCandidateDetected(enemy){var distance=this.getEdgeDistanceToOther(enemy);if(Utils.greater(distance,this.attackRange))return;if(distance<this.nearestTargetDistance){this.nearestTargetDistance=distance;this.attackTarget=enemy;}}updateMoveFromInput(){var move=Game.getMove();if(Utils.isZeroVec2(move)){this.setTargetVelocity(Vec2.ZERO);this.playAnimation(Character.ANIMATION_IDLE);}else {this.hasMoved=true;this.setTargetVelocityFromDirection(move);this.setOrientationFromDirection(move);this.playAnimation(Character.ANIMATION_RUN);}}fireArrow(){this.willFireArrow=true;}setAttackTarget(attackTarget){if(attackTarget&&attackTarget.isAlive()){this.attackTarget=attackTarget;}else {this.attackTarget=null;}}updateAttack(dt){if(this.attackTarget){if(!this.attackTarget.isAlive()){this.attackTarget=null;}}this.updateMoveFromInput();this.updateAttackOrientationOffset();if(this.isAtEndTopAnimation()){this.setAttackTarget(null);this.move();}}gainCoin(amount){Game.instance.gainCoin(amount);}shout(){this.playSFX("Shout");}addTowerPay(tower){var amount=tower.cost;var delayTime=Math.min(Constants.PLAYER_TOWER_PAY_MAX_TIME/amount,Constants.PLAYER_TOWER_PAY_COIN_DELAY);this.towerPayOperationArray.push({"tower":tower,"amount":amount,"spawnTime":this.time,"delayTime":delayTime});console.log(this.towerPayOperationArray.length);}updateTowerPay(dt){if(!this.isAlive())return;var operationCount=this.towerPayOperationArray.length;var pos=0;for(var i=0;i<operationCount;++i){var operation=this.towerPayOperationArray[i];if(Utils.greaterOrEqual(this.time,operation.spawnTime)){var tower=operation.tower;var amount=operation.amount-1;var startPosition=this.position.clone();var startHeight=this.targetHeight;var startRadius=Utils.randomBetween(Constants.PLAYER_COIN_START_MIN_OFFSET,Constants.PLAYER_COIN_START_MAX_OFFSET);var startAngle=Utils.randomAngleRad();startPosition.x+=Math.cos(startAngle)*startRadius;startPosition.y+=Math.sin(startAngle)*startRadius;Game.instance.spawnTowerPayCoin(startPosition,startHeight,tower,1);if(Utils.greater(amount,0)){operation.amount=amount;operation.spawnTime+=operation.delayTime;this.towerPayOperationArray[pos++]=operation;}}else {this.towerPayOperationArray[pos++]=operation;}}if(pos<operationCount){for(var i=pos;i<operationCount;++i){this.towerPayOperationArray[i]=null;}this.towerPayOperationArray.length=pos;}}updateState(dt){this.time+=dt;super.updateState(dt);this.updateTowerPay(dt);}constructor(...args){super(...args);_define_property$n(this,"splineBoneEntity",void 0);_define_property$n(this,"arrowDummyPoint",void 0);}}_define_property$n(Player,"scriptName","player");

var player = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Player: Player
});

function _define_property$m(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Enemy extends Character{getCharacterType(){return Character.TYPE_ENEMY}initializeActor(){super.initializeActor();if(this.ai){this.ai.startup(this);}this.setupGridItem();Game.instance.addEnemy(this);}deinitializeActor(){Game.instance.removeEnemy(this);super.deinitializeActor();}setupData(){super.setupData();if(this.physicsCategory===null){this.physicsCategory=Constants.SHAPE_ENEMY_CATEGORY;}if(this.physicsMask===null){this.physicsMask=Constants.SHAPE_ENEMY_MASK;}}syncData(){super.syncData();this.coinCount=this.data.coinCount;this.coinAmount=this.data.coinAmount;this.baseHitDamage=this.data.baseHitDamage;}clearData(){if(this.gridItem){this.gridItem.remove();this.gridItem=null;}if(this.ai){this.ai.shutdown(this);this.ai=null;}this.aiData=null;super.clearData();}setupGridItem(){this.gridItem=Game.instance.enemyGrid.createItem(this);this.gridItem.updatePosition();}updateActor(dt){if(this.ai){this.ai.update(this,dt);}super.updateActor(dt);this.gridItem.updatePosition();}setAI(ai){if(this.ai===ai){return}if(this.ai&&this.isValid){this.ai.shutdown(this);}this.ai=ai;if(this.ai&&this.isValid){this.ai.startup(this);}}setAIData(aiData){this.aiData=aiData;}onHitBase(base){if(base){base.takeHit(this.baseHitDamage);}this.markDestroy();}beginMove(){}updateMove(dt){}beginDie(){super.beginDie();this.dropCoins();Game.instance.removeEnemy(this);}dropCoins(){if(this.coinAmount===0||this.coinCount===0)return;for(var i=0;i<this.coinCount;++i){var startPosition=this.position;var startHeight=this.targetHeight;var dropRadius=this.radius+Utils.randomBetween(Constants.ENEMY_COIN_DROP_MIN_RADIUS,Constants.ENEMY_COIN_DROP_MAX_RADIUS);var dropAngle=Utils.randomAngleRad();var dropPosition=new Vec2(startPosition.x+Math.cos(dropAngle)*dropRadius,startPosition.y+Math.sin(dropAngle)*dropRadius);Game.instance.spawnDropCoin(startPosition,startHeight,dropPosition,this.coinAmount);}}constructor(args){super(args);this.ai=null;this.aiData=null;}}_define_property$m(Enemy,"scriptName","enemy");

var enemy = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Enemy: Enemy
});

function _define_property$l(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Joystick extends Script{initialize(){this.onTouchStart=this.onTouchStart.bind(this);this.onTouchEnd=this.onTouchEnd.bind(this);this.onTouchMove=this.onTouchMove.bind(this);this.startPosition=Vec2.ZERO.clone();this.direction=Vec2.ZERO.clone();this.move=Vec2.ZERO.clone();this.app.on(this.touchStartEventName,this.onTouchStart);this.app.on(this.touchEndEventName,this.onTouchEnd);this.app.on(this.touchMoveEventName,this.onTouchMove);this.once("destroy",this.onDestroyed);}onDestroyed(){this.app.off(this.touchStartEventName,this.onTouchStart);this.app.off(this.touchEndEventName,this.onTouchEnd);this.app.off(this.touchMoveEventName,this.onTouchMove);}setPosition(x,y){this.entity.setLocalPosition(x,y,0);}setHandleOffset(x,y){this.handle.setLocalPosition(x,y,0);}setVisible(value){this.entity.element.enabled=value;this.handle.element.enabled=value;}onTouchStart(x,y){this.setVisible(true);this.startPosition.set(x,y);this.setPosition(x,y);this.setHandleOffset(0,0);}onTouchEnd(x,y){this.setVisible(false);this.resetMove();}onTouchMove(x,y){var dx=x-this.startPosition.x;var dy=y-this.startPosition.y;this.updateMove(dx,dy);}resetMove(){this.direction.set(0,0);this.move.set(0,0);this.setHandleOffset(0,0);}updateMove(dx,dy){Utils.clampMagnitudeVec2InPlace(this.direction,dx,dy,this.handleMaxDistance);this.setHandleOffset(this.direction.x,this.direction.y);if(!this.snapping){this.move.set(-this.direction.x/this.handleMaxDistance,this.direction.y/this.handleMaxDistance);}else {this.move.set(-this.direction.x,this.direction.y);Utils.normalizeVec2InPlace(this.move);}}constructor(...args){super(...args);_define_property$l(this,"handle",void 0);_define_property$l(this,"handleMaxDistance",256);_define_property$l(this,"touchStartEventName","touchStart");_define_property$l(this,"touchEndEventName","touchEnd");_define_property$l(this,"touchMoveEventName","touchMove");_define_property$l(this,"snapping",false);}}_define_property$l(Joystick,"scriptName","joystick");

var joystick = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Joystick: Joystick
});

function _define_property$k(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class DesktopInput extends Script{initialize(){this.canvas=this.app.graphicsDevice.canvas;this.onKeyDown=this.onKeyDown.bind(this);this.onKeyUp=this.onKeyUp.bind(this);window.addEventListener("keydown",this.onKeyDown);window.addEventListener("keyup",this.onKeyUp);this.once("destroy",this.onDestroyed);}onDestroyed(){window.removeEventListener("keydown",this.onKeyDown);window.removeEventListener("keyup",this.onKeyUp);}handleKey(key,val){switch(key.toLowerCase()){case"w":case"arrowup":this.app.fire("move:up",val);break;case"s":case"arrowdown":this.app.fire("move:down",val);break;case"a":case"arrowleft":this.app.fire("move:right",val);break;case"d":case"arrowright":this.app.fire("move:left",val);break}}onKeyDown(e){if(e.repeat){return}this.handleKey(e.key,true);}onKeyUp(e){if(e.repeat){return}this.handleKey(e.key,false);}}_define_property$k(DesktopInput,"scriptName","desktopInput");

var desktop_input = /*#__PURE__*/Object.freeze({
    __proto__: null,
    DesktopInput: DesktopInput
});

function _define_property$j(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class MobileInput extends Script{initialize(){this.device=this.app.graphicsDevice;this.canvas=this.app.graphicsDevice.canvas;this.screen=this.screenEntity.screen;this.onTouchStart=this.onTouchStart.bind(this);this.onTouchMove=this.onTouchMove.bind(this);this.onTouchEnd=this.onTouchEnd.bind(this);this.isTouching=false;this.touchId=0;this.touchPosition=Vec2.ZERO.clone();this.canvas.addEventListener("touchstart",this.onTouchStart,false);this.canvas.addEventListener("touchmove",this.onTouchMove,false);this.canvas.addEventListener("touchend",this.onTouchEnd,false);this.once("destroy",this.onDestroyed);}onDestroyed(){this.canvas.removeEventListener("touchstart",this.onTouchStart,false);this.canvas.removeEventListener("touchmove",this.onTouchMove,false);this.canvas.removeEventListener("touchend",this.onTouchEnd,false);}updateTouchPosition(canvasX,canvasY){var scale=this.screen.scale;var screenWidth=this.device.width/scale;var screenHeight=this.device.height/scale;this.touchPosition.set(screenWidth*canvasX/this.canvas.clientWidth,screenHeight*(1-canvasY/this.canvas.clientHeight));}onTouchStart(e){if(this.isTouching)return;e.preventDefault();var touches=e.changedTouches;var touchCount=touches.length;if(touchCount==0)return;var touch=touches[0];this.isTouching=true;this.touchId=touch.identifier;this.updateTouchPosition(touch.pageX,touch.pageY);this.app.fire("joystick:start",this.touchPosition.x,this.touchPosition.y);}onTouchEnd(e){if(!this.isTouching)return;e.preventDefault();var touches=e.changedTouches;var touchCount=touches.length;if(touchCount==0)return;for(var i=0;i<touchCount;++i){var touch=touches[i];if(touch.identifier!==this.touchId)continue;this.isTouching=false;this.touchId=0;this.updateTouchPosition(touch.pageX,touch.pageY);this.app.fire("joystick:end",this.touchPosition.x,this.touchPosition.y);break}}onTouchMove(e){if(!this.isTouching)return;e.preventDefault();var touches=e.changedTouches;var touchCount=touches.length;if(touchCount==0)return;for(var i=0;i<touchCount;++i){var touch=touches[i];if(touch.identifier!==this.touchId)continue;this.updateTouchPosition(touch.pageX,touch.pageY);this.app.fire("joystick:move",this.touchPosition.x,this.touchPosition.y);break}}update(dt){}constructor(...args){super(...args);_define_property$j(this,"screenEntity",void 0);}}_define_property$j(MobileInput,"scriptName","mobileInput");

var mobile_input = /*#__PURE__*/Object.freeze({
    __proto__: null,
    MobileInput: MobileInput
});

function _define_property$i(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class GameCamera extends Script{initialize(){this.followActor=null;this.position=this.entity.getLocalPosition();this.positionOffset=Vec3.ZERO.clone();}setFollowActor(actor){this.followActor=actor;this.positionOffset.copy(this.position);this.positionOffset.sub(this.followActor.getEntityPosition());}postUpdate(dt){if(this.followActor===null)return;this.position.copy(this.followActor.getEntityPosition());this.position.add(this.positionOffset);this.entity.setLocalPosition(this.position);}}_define_property$i(GameCamera,"scriptName","gameCamera");

var game_camera = /*#__PURE__*/Object.freeze({
    __proto__: null,
    GameCamera: GameCamera
});

function _define_property$h(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class AnimTransitionData extends Script{getTranstitionDuration(start,end){var itemCount=this.items?this.items.length:0;for(var i=0;i<itemCount;++i){var item=this.items[i];if(item.isValid(start,end)){return item.duration}}return this.defaultDuration}constructor(...args){super(...args);_define_property$h(this,"items",void 0);_define_property$h(this,"defaultDuration",0);}}_define_property$h(AnimTransitionData,"scriptName","animTransitionData");

var anim_transition_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    AnimTransitionData: AnimTransitionData
});

function _define_property$g(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Tower extends Actor{initialize(){super.initialize();this.animationLayer=this.ballistaEntity.anim.baseLayer;this.onAutoAttackCandidateDetected=this.onAutoAttackCandidateDetected.bind(this);this.fireArrow=this.fireArrow.bind(this);this.ballistaEntity.anim.on("fireArrow",this.fireArrow);this.placement=this.placementEnity.script.towerPlacement;}postInitialize(){super.postInitialize();this.placement.setProgress(0);}onPlayerEnterPlacement(){this.playerIsInPlacement=true;}onPlayerExitPlacement(){this.playerIsInPlacement=false;}setupData(){super.setupData();this.attackOrientationOffset=0;this.state=Tower.STATE_EMPTY;this.prevState=this.state;this.playerIsInPlacement=false;this.collectedCoin=0;this.buildingHeight=0;this.setVisible(false);this.setPlacementVisible(true);this.placement.setCost(this.cost);this.nearestTargetDistance=Constants.INF;this.attackTarget=null;}syncData(){super.syncData();this.size=this.data.size.clone();this.sensorSizeOffset=this.data.sensorSizeOffset.clone();this.projectileName=this.data.projectileName;if(this.attackRange<0)this.attackRange=this.data.attackRange;if(this.damage<0)this.damage=this.data.damage;if(this.cost<0)this.cost=this.data.cost;}setVisible(visible){var visibleEntityCount=this.visibleEntities.length;for(var i=0;i<visibleEntityCount;++i){this.visibleEntities[i].enabled=visible;}}setPlacementVisible(visible){this.placementEnity.enabled=visible;}createCollisionFixture(){var polygonShape=new Box2D.b2PolygonShape;polygonShape.SetAsBox(this.size.x*.5,this.size.y*.5,Box2DUtils.b2Vec2_ZERO,0);var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_STATIC_CATEGORY);filter.set_maskBits(Constants.SHAPE_STATIC_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(polygonShape);fixtureDef.set_filter(filter);return this.body.CreateFixture(fixtureDef)}createSensorFixture(){var polygonShape=new Box2D.b2PolygonShape;polygonShape.SetAsBox((this.size.x+this.sensorSizeOffset.x)*.5,(this.size.y+this.sensorSizeOffset.y)*.5,Box2DUtils.b2Vec2_ZERO,0);var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_PLAYER_DETECTOR_CATEGORY);filter.set_maskBits(Constants.SHAPE_PLAYER_DETECTOR_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(polygonShape);fixtureDef.set_isSensor(true);fixtureDef.set_filter(filter);return this.body.CreateFixture(fixtureDef)}destroySensorFixture(){if(this.sensorFixture){this.body.DestroyFixture(this.sensorFixture);this.sensorFixture=null;}}setupPhysics(){super.setupPhysics();var bodyDef=new Box2D.b2BodyDef;bodyDef.set_type(Box2D.b2_staticBody);this.body=Game.getWorld().CreateBody(bodyDef);this.body.SetTransform(Box2DUtils.b2Vec2_fromPC(this.position),(90+this.orientation)*Constants.Deg2Rad);this.sensorFixture=this.createSensorFixture();Game.instance.registerSensor(Game.SENSOR_TOWER,this.sensorFixture);Game.instance.registerActorBody(this,this.body);}clearPhysics(){if(this.sensorFixture){Game.instance.unregisterSensor(this.sensorFixture);this.body.DestroyFixture(this.sensorFixture);this.sensorFixture=null;}if(this.body){Game.instance.unregisterActorBody(this.body);Game.getWorld().DestroyBody(this.body);this.body=null;}super.clearPhysics();}updateState(dt){switch(this.state){case Tower.STATE_EMPTY:this.updateEmpty(dt);break;case Tower.STATE_RECEIVING_COIN:this.updateReceivingCoin(dt);break;case Tower.STATE_BUILDING:this.updateBuilding(dt);break;case Tower.STATE_IDLE:this.updateIdle(dt);break;case Tower.STATE_ATTACK:this.updateAttack(dt);break}}onStateEnter(state,prevState){switch(state){case Tower.STATE_RECEIVING_COIN:this.beginReceivingCoin();break;case Tower.STATE_BUILDING:this.beginBuilding();break;case Tower.STATE_ATTACK:this.beginAttack();break}}onStateExit(state,newState){switch(state){case Tower.STATE_ATTACK:this.endAttack();break}}beginReceivingCoin(){this.destroySensorFixture();}beginBuilding(){this.createCollisionFixture();this.setPlacementVisible(false);this.setVisible(true);this.buildingHeight=Constants.TOWER_BUILDING_START_Y;this.updateBuildingPosition();}beginAttack(){this.animationLayer.transition("Attack",Constants.ANIMATION_DEFAULT_TRANSITION,0);this.updateAttackOrientationOffset();}endAttack(){this.animationLayer.transition("Idle",Constants.ANIMATION_DEFAULT_TRANSITION,0);}receivingCoin(){this.setState(Tower.STATE_RECEIVING_COIN);}building(){this.setState(Tower.STATE_BUILDING);}attack(){this.setState(Tower.STATE_ATTACK,true);}idle(){this.setState(Tower.STATE_IDLE);}updateEmpty(dt){if(this.playerIsInPlacement){if(Utils.greaterOrEqual(Game.instance.coinAmount,this.cost)){Game.instance.useCoin(this.cost);var player=Game.instance.player;if(player&&player.isAlive()){player.addTowerPay(this);}this.receivingCoin();}}}updateReceivingCoin(){}updateBuilding(dt){this.buildingHeight+=Constants.TOWER_BUILDING_VEL_Y*dt;var finished=false;if(this.buildingHeight>=Constants.TOWER_BUILDING_END_Y){this.buildingHeight=Constants.TOWER_BUILDING_END_Y;finished=true;}this.updateBuildingPosition();if(finished){this.idle();}}updateIdle(dt){if(!Game.instance.isPlaying())return;this.checkAutoAttackTarget();if(this.attackTarget!==null){this.attack();}}updateAttack(dt){if(this.attackTarget){if(!this.attackTarget.isAlive()){this.attackTarget=null;}}this.updateAttackOrientationOffset();if(this.isAtEndAnimation()){this.setAttackTarget(null);this.idle();}}updateBuildingPosition(){this.setEntityPosition(Utils.getPosition3D(this.position,this.buildingHeight));}setAttackTarget(attackTarget){if(attackTarget&&attackTarget.isAlive()){this.attackTarget=attackTarget;}else {this.attackTarget=null;}}checkAutoAttackTarget(){this.nearestTargetDistance=Constants.INF;this.attackTarget=null;Game.instance.findGridEnemyInCircle(this.position,this.attackRange,this.onAutoAttackCandidateDetected);}onAutoAttackCandidateDetected(enemy){var distance=this.getEdgeDistanceToOther(enemy);if(Utils.greater(distance,this.attackRange))return;if(distance<this.nearestTargetDistance){this.nearestTargetDistance=distance;this.attackTarget=enemy;}}setBallistaPivotRotation(r){return this.ballistaPivotEntity.setLocalRotation(r)}updateAttackOrientationOffset(){if(!this.attackTarget||!this.attackTarget.isAlive())return;var attackOrientation=this.getLookAtOrientation(this.attackTarget);this.attackOrientationOffset=attackOrientation-this.orientation;}fireArrow(){if(this.attackTarget&&this.attackTarget.isAlive()){var attackPosition3D=this.arrowDummyPoint.getPosition();var attackPosition=Utils.getPosition2D(attackPosition3D);var attackHeight=attackPosition3D.y;var attackOrientation=this.getLookAtOrientation(this.attackTarget);var projectile=Game.instance.spawnProjectile(this.projectileName,attackPosition,attackHeight,attackOrientation);if(projectile){projectile.target=this.attackTarget;projectile.damage=this.damage;}}}isAtEndAnimation(){if(this.animationLayer.transitioning)return false;return this.animationLayer.activeStateProgress>=1}updateDisplay(dt){this.ballistaPivotEntity.setLocalRotation(Utils.getRotationFromOrientationOffset(this.attackOrientationOffset));}gainCoin(amount){this.collectedCoin+=amount;var remainingCost=this.cost-this.collectedCoin;this.placement.setCost(remainingCost);var ratio=this.collectedCoin/this.cost;this.placement.setProgress(Utils.clamp(ratio,0,1));if(Utils.lessOrEqual(remainingCost,0)){this.building();}}constructor(...args){super(...args);_define_property$g(this,"visibleEntities",void 0);_define_property$g(this,"ballistaEntity",void 0);_define_property$g(this,"ballistaPivotEntity",void 0);_define_property$g(this,"arrowDummyPoint",void 0);_define_property$g(this,"placementEnity",void 0);_define_property$g(this,"attackRange",-1);_define_property$g(this,"damage",-1);_define_property$g(this,"cost",-1);}}_define_property$g(Tower,"scriptName","tower");(()=>{Tower.STATE_EMPTY=0;Tower.STATE_RECEIVING_COIN=1;Tower.STATE_BUILDING=2;Tower.STATE_IDLE=3;Tower.STATE_ATTACK=4;})();(()=>{Tower.ANIMATION_IDLE=0;Tower.ANIMATION_ATTACK=1;})();

var tower = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Tower: Tower
});

function _define_property$f(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Projectile extends Actor{initialize(){super.initialize();this.displayEntities=[];var displayCount=this.displayEntityPaths.length;for(var i=0;i<displayCount;++i){var path=this.displayEntityPaths[i];var displayEntity=this.entity.findByPath(path);this.displayEntities.push(displayEntity);}}setDisplayVisible(value){var displayCount=this.displayEntities.length;for(var i=0;i<displayCount;++i){this.displayEntities[i].enabled=value;}}setupData(){super.setupData();this.height=this.entity.getPosition().y;this.pitch=0;this.time=0;this.target=null;this.hasHit=false;}syncData(){super.syncData();this.radius=this.data.radius;this.speed=this.data.speed;this.damage=this.data.damage;this.lifeTime=this.data.lifeTime;this.endWaitTime=this.data.endWaitTime;this.hitEffectName=this.data.hitEffectName;}onHit(){if(this.hasHit)return;this.hasHit=true;if(this.target&&this.target.isAlive()){this.target.takeHit(this.damage,this.orientation);}this.setDisplayVisible(false);Game.instance.spawnEffect(this.hitEffectName,this.getPosition(),this.height);}updateState(dt){this.time+=dt;if(this.hasHit){if(Utils.greaterOrEqual(this.time,this.endWaitTime)){this.markDestroy();}return}if(this.target===null||!this.target.isAlive()){this.onHit();return}if(Utils.greaterOrEqual(this.lifeTime,0)){if(Utils.greater(this.time,this.lifeTime)){this.onHit();return}}var move=this.speed*dt;var position3D=Utils.getPosition3D(this.position,this.height);var targetPosition3D=Utils.getPosition3D(this.target.getPosition(),this.target.targetHeight??0);var dx=targetPosition3D.x-position3D.x;var dy=targetPosition3D.y-position3D.y;var dz=targetPosition3D.z-position3D.z;var distance=Math.sqrt(dx*dx+dz*dz);var edgeDistanceH=distance-this.target.radius-this.radius;if(Utils.lessOrEqual(edgeDistanceH,0)){dx=0;dz=0;distance=0;}this.setOrientation(Utils.getOrientationFromDirection(new Vec2(dx,dz),this.orientation));this.pitch=Utils.getPitchFromDirection(distance,dy,this.pitch);distance=Math.sqrt(dx*dx+dy*dy+dz*dz);if(Utils.greaterOrEqual(move,distance)){move=distance;this.position.x+=dx;this.position.y+=dz;this.height+=dy;this.onHit();return}var ratio=move/distance;this.position.x+=dx*ratio;this.position.y+=dz*ratio;this.height+=dy*ratio;}updateDisplay(dt){this.setEntityPosition(Utils.getPosition3D(this.position,this.height));this.setEntityRotation(Utils.getRotationFromOrientationAndPitch(this.orientation,this.pitch));}constructor(...args){super(...args);_define_property$f(this,"displayEntityPaths",void 0);}}_define_property$f(Projectile,"scriptName","projectile");

var projectile = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Projectile: Projectile
});

function _define_property$e(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Trail extends Script{initialize(){this.time=0;this.points=[];var vertexCount=this.maxPoints*2;this.vertexPositionArray=new Float32Array(vertexCount*3);this.vertexColorArray=new Float32Array(vertexCount*4);this.vertexIndexArray=[];for(let i=0;i<vertexCount;++i){this.vertexIndexArray.push(i);}var device=this.app.graphicsDevice;this.mesh=new Mesh(device);this.mesh.clear(true,false);this.mesh.setPositions(this.vertexPositionArray,3,vertexCount);this.mesh.setColors(this.vertexColorArray,4,vertexCount);this.mesh.setIndices(this.vertexIndexArray,vertexCount);this.mesh.update(PRIMITIVE_TRISTRIP);const shader=new Shader(device,Trail.shaderDef);this.material=new Material;this.material.shader=shader;this.material.cull=CULLFACE_NONE;this.material.blendType=BLEND_NORMAL;this.material.depthTest=true;this.material.depthWrite=false;this.boundingBox=new BoundingBox;this.meshInstance=new MeshInstance(this.mesh,this.material);this.meshInstance.aabb=this.boundingBox;this.meshInstance._updateAabb=false;var render=this.entity.addComponent("render",{meshInstances:[this.meshInstance],layers:[this.app.scene.layers.getLayerByName("World").id]});render.castShadows=false;render.castShadowsLightmap=false;render.receiveShadows=false;render.enabled=false;}reset(){this.time=0;this.point=[];}addPoint(){while(this.points.length>=this.maxPoints){this.points.pop();}var center=this.entity.getPosition();var right=this.entity.right;this.points.unshift({"center":center.clone(),"right":right.clone().mulScalar(this.width*.5),"time":this.time});}cleanOldPoints(){for(var i=this.points.length-1;i>=0;--i){var point=this.points[i];if(this.time-point.time>=this.vertexTime){this.points.pop();}else {break}}}prepareVertexData(){var pointCount=this.points.length;var posId=0;var colorId=0;for(let i=0;i<pointCount;++i){var point=this.points[i];var ratio=(this.time-point.time)/this.vertexTime;var widthScale=this.widthScaleCurve.value(ratio);var color=this.colorCurve.value(ratio);var center=point.center;var right=point.right;var dx=right.x*widthScale;var dy=right.y*widthScale;var dz=right.z*widthScale;this.vertexPositionArray[posId++]=center.x-dx;this.vertexPositionArray[posId++]=center.y-dy;this.vertexPositionArray[posId++]=center.z-dz;this.vertexColorArray[colorId++]=color[0];this.vertexColorArray[colorId++]=color[1];this.vertexColorArray[colorId++]=color[2];this.vertexColorArray[colorId++]=color[3];this.vertexPositionArray[posId++]=center.x+dx;this.vertexPositionArray[posId++]=center.y+dy;this.vertexPositionArray[posId++]=center.z+dz;this.vertexColorArray[colorId++]=color[0];this.vertexColorArray[colorId++]=color[1];this.vertexColorArray[colorId++]=color[2];this.vertexColorArray[colorId++]=color[3];}this.boundingBox.compute(this.vertexPositionArray,pointCount*2);}update(dt){this.time+=dt;this.cleanOldPoints();this.addPoint();var vertexCount=this.points.length*2;if(vertexCount>1){this.prepareVertexData();this.mesh.setPositions(this.vertexPositionArray,3,vertexCount);this.mesh.setColors(this.vertexColorArray,4,vertexCount);this.mesh.setIndices(this.vertexIndexArray,vertexCount);this.mesh.update(PRIMITIVE_TRISTRIP);this.entity.render.enabled=true;}else {this.entity.render.enabled=false;}}constructor(...args){super(...args);_define_property$e(this,"maxPoints",100);_define_property$e(this,"vertexTime",.1);_define_property$e(this,"vertexDistance",.1);_define_property$e(this,"width",.5);_define_property$e(this,"colorCurve",void 0);_define_property$e(this,"widthScaleCurve",void 0);}}_define_property$e(Trail,"scriptName","trail");_define_property$e(Trail,"shaderDef",{attributes:{aPosition:SEMANTIC_POSITION,aColor:SEMANTIC_COLOR},vshader:`
            attribute vec3 aPosition;
            attribute vec4 aColor;

            uniform mat4 matrix_viewProjection;

            varying vec4 vColor;

            void main(void) {
                vColor = aColor;
                gl_Position = matrix_viewProjection * vec4(aPosition, 1.0);
            }
        `,fshader:`
            precision mediump float;

            varying vec4 vColor;

            void main(void) {
                gl_FragColor = vColor;
            }
        `});

var trail = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Trail: Trail
});

function _define_property$d(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Effect extends Script{initialize(){this.time=0;this.hasPlayed=false;this.particleEntities=[];var particleCount=this.particleEntityPaths.length;for(var i=0;i<particleCount;++i){var path=this.particleEntityPaths[i];var particleEntity=this.entity.findByPath(path);this.particleEntities.push(particleEntity);}}postInitialize(){var particleCount=this.particleEntities.length;for(var i=0;i<particleCount;++i){var ps=this.particleEntities[i].particlesystem;ps.emitter.material.depthTest=this.depthTest;}}play(){if(this.hasPlayed)return;this.hasPlayed=true;var particleCount=this.particleEntities.length;for(var i=0;i<particleCount;++i){var ps=this.particleEntities[i].particlesystem;ps.play();}}update(dt){if(!this.hasPlayed)return;this.time+=dt;if(Utils.greaterOrEqual(this.destroyTime,0)){if(Utils.greaterOrEqual(this.time,this.destroyTime)){this.entity.destroy();}}}constructor(...args){super(...args);_define_property$d(this,"particleEntityPaths",void 0);_define_property$d(this,"destroyTime",1);_define_property$d(this,"depthTest",false);}}_define_property$d(Effect,"scriptName","effect");

var effect = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Effect: Effect
});

function _define_property$c(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class TowerPlacement extends Script{initialize(){this.progressImageRect=this.progressImage.element.rect.clone();}setCost(cost){this.costTextEntity.element.text=cost.toString();}setProgress(value){this.progress=value;var height=Utils.lerp(0,this.progressImageMaxHeight,value);this.progressImage.element.height=height;this.progressImageRect.copy(this.progressImage.element.rect);this.progressImageRect.z=value;this.progressImage.element.rect=this.progressImageRect;}constructor(...args){super(...args);_define_property$c(this,"costTextEntity",void 0);_define_property$c(this,"progressImage",null);_define_property$c(this,"progressImageMaxHeight",1);}}_define_property$c(TowerPlacement,"scriptName","towerPlacement");

var tower_placement = /*#__PURE__*/Object.freeze({
    __proto__: null,
    TowerPlacement: TowerPlacement
});

function _define_property$b(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Coin extends Actor{initialize(){super.initialize();this.displayEntity=this.entity.findByPath(this.displayEntityPath);}setDropData(dropPosition,dropMaxHeight,amount){this.dropPosition=dropPosition;this.dropMaxHeight=dropMaxHeight;this.amount=amount;}setPaying(isPaying,target=null){this.isPaying=isPaying;this.target=target;}setupData(){super.setupData();this.height=this.entity.getPosition().y;this.state=Coin.STATE_START;this.prevState=this.state;this.velocity=new Vec2;this.needCollected=false;this.beginStart();}syncData(){super.syncData();this.radius=this.data.radius;this.rotateSpeed=this.data.rotateSpeed;this.payFlipSpeed=this.data.payFlipSpeed;this.followingSpeed=this.data.followingSpeed;}setupPhysics(){if(this.isPaying){this.body=null;return}super.setupPhysics();var bodyDef=new Box2D.b2BodyDef;bodyDef.set_type(Box2D.b2_staticBody);bodyDef.set_active(false);this.body=Game.getWorld().CreateBody(bodyDef);var circleShape=new Box2D.b2CircleShape;circleShape.set_m_radius(this.radius);circleShape.set_m_p(Box2DUtils.b2Vec2_fromPC(this.dropPosition));var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_PICKUP_CATEGORY);filter.set_maskBits(Constants.SHAPE_PICKUP_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(circleShape);fixtureDef.set_filter(filter);this.body.CreateFixture(fixtureDef);Game.instance.registerActorBody(this,this.body);}clearPhysics(){if(this.body){Game.instance.unregisterActorBody(this.body);Game.getWorld().DestroyBody(this.body);this.body=null;}super.clearPhysics();}onStateExit(state,nextState){switch(state){case Coin.STATE_STAY:this.endStay();break}}onStateEnter(state,prevState){switch(state){case Coin.STATE_STAY:this.beginStay();break;case Coin.STATE_FOLLOWING:this.beginFollowing();break}}beginStart(){var gravity=Constants.GRAVITY;var startPosition=this.position;var startHeight=this.height;var vSpeed=Math.sqrt((this.dropMaxHeight-startHeight)*2*gravity);this.startVSpeed=vSpeed;var endHeight=this.radius;var heightDiff=startHeight-endHeight;var delta=vSpeed*vSpeed+2*heightDiff*gravity;var startMaxTime=(vSpeed+Math.sqrt(delta))/gravity;this.startPosition=startPosition.clone();this.startHeight=startHeight;this.startTime=0;this.startMaxTime=startMaxTime;this.startHSpeed=startPosition.distance(this.dropPosition)/startMaxTime;this.startDirection=this.dropPosition.clone().sub(startPosition);Utils.normalizeVec2InPlace(this.startDirection);this.setOrientationFromDirection(this.startDirection);if(this.isPaying){this.displayEntity.rotate(0,0,Utils.randomAngle());}}beginStay(){if(this.body){this.body.SetActive(true);}}endStay(){if(this.body!=null){this.clearPhysics();}}beginFollowing(){this.target=Game.instance.player;}onCollected(){this.needCollected=true;}updateState(dt){switch(this.state){case Coin.STATE_START:this.updateStart(dt);break;case Coin.STATE_STAY:this.updateStay(dt);break;case Coin.STATE_FOLLOWING:this.updateFollowing(dt);break}}updateStart(dt){var finished=false;this.startTime+=dt;if(Utils.greaterOrEqual(this.startTime,this.startMaxTime)){this.startTime=this.startMaxTime;finished=true;}var t=this.startTime;this.height=this.startHeight+this.startVSpeed*t-Constants.GRAVITY*t*t*.5;this.velocity.copy(this.startDirection);this.velocity.mulScalar(t*this.startHSpeed);this.position.copy(this.startPosition);this.position.add(this.velocity);if(finished){if(this.isPaying){this.onTargetGainCoin();this.markDestroy();return}this.setState(Coin.STATE_STAY);}}onTargetGainCoin(){if(!this.target)return;if(!this.target.gainCoin)return;this.target.gainCoin(this.amount);}updateStay(dt){if(this.needCollected){this.needCollected=false;this.setState(Coin.STATE_FOLLOWING);}}updateFollowing(dt){if(!this.target||!this.target.isAlive()){this.markDestroy();return}var finished=false;var move=this.followingSpeed*dt;var position3D=Utils.getPosition3D(this.position,this.height);var targetPosition3D=Utils.getPosition3D(this.target.getPosition(),this.target.targetHeight??0);var dx=targetPosition3D.x-position3D.x;var dy=targetPosition3D.y-position3D.y;var dz=targetPosition3D.z-position3D.z;var distance=Math.sqrt(dx*dx+dz*dz);var edgeDistanceH=distance-this.target.radius-this.radius;if(Utils.lessOrEqual(edgeDistanceH,0)){dx=0;dz=0;distance=0;}this.setOrientation(Utils.getOrientationFromDirection(new Vec2(dx,dz),this.orientation));distance=Math.sqrt(dx*dx+dy*dy+dz*dz);if(Utils.greaterOrEqual(move,distance)){move=distance;this.position.x+=dx;this.position.y+=dz;this.height+=dy;finished=true;}var ratio=move/distance;this.position.x+=dx*ratio;this.position.y+=dz*ratio;this.height+=dy*ratio;if(finished){this.onTargetGainCoin();this.markDestroy();}}updateDisplay(dt){this.setEntityPosition(Utils.getPosition3D(this.position,this.height));this.setEntityRotation(Utils.getRotationFromOrientation(this.orientation));if(this.isPaying){this.displayEntity.rotate(0,0,this.payFlipSpeed*dt);}else {this.displayEntity.rotate(0,this.rotateSpeed*dt,0);}}constructor(...args){super(...args);_define_property$b(this,"displayEntityPath","display");}}_define_property$b(Coin,"scriptName","coin");(()=>{Coin.STATE_START=0;Coin.STATE_STAY=1;Coin.STATE_FOLLOWING=2;})();

var coin = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Coin: Coin
});

function _define_property$a(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class CoinInfo extends Script{initialize(){}setAmount(amount){this.textEntity.element.text=amount.toString();}constructor(...args){super(...args);_define_property$a(this,"textEntity",void 0);}}_define_property$a(CoinInfo,"scriptName","coinInfo");

var coin_info = /*#__PURE__*/Object.freeze({
    __proto__: null,
    CoinInfo: CoinInfo
});

function _define_property$9(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class EndScreen extends Script{initialize(){this.onBackgroundClicked=this.onBackgroundClicked.bind(this);this.onCTAClicked=this.onCTAClicked.bind(this);this.onRetryClicked=this.onRetryClicked.bind(this);this.backgroundEntity.button.on("click",this.onBackgroundClicked);this.retryButtonEntity.button.on("click",this.onRetryClicked);this.ctaButtonEntity.button.on("click",this.onCTAClicked);}show(){this.entity.enabled=true;}onBackgroundClicked(){Game.instance.openStore();}onCTAClicked(){console.log("CTA Clicked!");Game.instance.openStore();}openLink(url){window.open(url);}onRetryClicked(){this.app.scenes.changeScene("Game");}constructor(...args){super(...args);_define_property$9(this,"backgroundEntity",void 0);_define_property$9(this,"retryButtonEntity",void 0);_define_property$9(this,"ctaButtonEntity",void 0);}}_define_property$9(EndScreen,"scriptName","endScreen");

var end_screen = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EndScreen: EndScreen
});

function _define_property$8(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class ActorData extends Script{constructor(...args){super(...args);_define_property$8(this,"template",void 0);}}_define_property$8(ActorData,"scriptName","actorData");

var actor_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    ActorData: ActorData
});

function _define_property$7(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class CharacterData extends ActorData{constructor(...args){super(...args);_define_property$7(this,"radius",1);_define_property$7(this,"targetHeight",1);_define_property$7(this,"mass",1);_define_property$7(this,"speed",10);_define_property$7(this,"acceleration",90);_define_property$7(this,"maxHealth",100);_define_property$7(this,"damage",10);_define_property$7(this,"animationTransitionDataName","");}}_define_property$7(CharacterData,"scriptName","characterData");

var character_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    CharacterData: CharacterData
});

function _define_property$6(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class EnemyData extends CharacterData{constructor(...args){super(...args);_define_property$6(this,"coinCount",1);_define_property$6(this,"coinAmount",1);_define_property$6(this,"baseHitDamage",10);}}_define_property$6(EnemyData,"scriptName","enemyData");

var enemy_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EnemyData: EnemyData
});

function _define_property$5(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class PlayerData extends CharacterData{constructor(...args){super(...args);_define_property$5(this,"attackRange",5);_define_property$5(this,"coinDetectRange",10);_define_property$5(this,"projectileName","projectile");}}_define_property$5(PlayerData,"scriptName","playerData");

var player_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    PlayerData: PlayerData
});

function _define_property$4(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class TowerData extends ActorData{constructor(...args){super(...args);_define_property$4(this,"size",void 0);_define_property$4(this,"sensorSizeOffset",void 0);_define_property$4(this,"attackRange",5);_define_property$4(this,"damage",10);_define_property$4(this,"cost",5);_define_property$4(this,"projectileName","projectile");}}_define_property$4(TowerData,"scriptName","towerData");

var tower_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    TowerData: TowerData
});

function _define_property$3(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class ProjectileData extends ActorData{constructor(...args){super(...args);_define_property$3(this,"radius",.5);_define_property$3(this,"speed",10);_define_property$3(this,"damage",10);_define_property$3(this,"lifeTime",-1);_define_property$3(this,"endWaitTime",0);_define_property$3(this,"hitEffectName","hitEffect");}}_define_property$3(ProjectileData,"scriptName","projectileData");

var projectile_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    ProjectileData: ProjectileData
});

function _define_property$2(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class CoinData extends ActorData{constructor(...args){super(...args);_define_property$2(this,"radius",.5);_define_property$2(this,"rotateSpeed",90);_define_property$2(this,"payFlipSpeed",90);_define_property$2(this,"followingSpeed",20);}}_define_property$2(CoinData,"scriptName","coinData");

var coin_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    CoinData: CoinData
});

function _define_property$1(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class Base extends Actor{initializeActor(){Game.instance.setBase(this);super.initializeActor();}syncData(){super.syncData();this.size=this.data.size.clone();this.sensorSizeOffset=this.data.sensorSizeOffset.clone();this.maxHealth=this.data.maxHealth;}setupData(){super.setupData();this.isAlive=true;this.health=this.maxHealth;}setupPhysics(){super.setupPhysics();var bodyDef=new Box2D.b2BodyDef;bodyDef.set_type(Box2D.b2_dynamicBody);bodyDef.set_fixedRotation(true);this.body=Game.getWorld().CreateBody(bodyDef);this.body.SetTransform(Box2DUtils.b2Vec2_fromPC(this.position),(90+this.orientation)*Constants.Deg2Rad);this.body.SetSleepingAllowed(false);var massData=new Box2D.b2MassData;massData.set_mass(Constants.BODY_INF_MASS);this.body.SetMassData(massData);this.createCollisionFixture();this.sensorFixture=this.createSensorFixture();Game.instance.registerSensor(Game.SENSOR_BASE,this.sensorFixture);}createCollisionFixture(){var polygonShape=new Box2D.b2PolygonShape;polygonShape.SetAsBox(this.size.x*.5,this.size.y*.5,Box2DUtils.b2Vec2_ZERO,0);var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_STATIC_CATEGORY);filter.set_maskBits(Constants.SHAPE_STATIC_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(polygonShape);fixtureDef.set_filter(filter);return this.body.CreateFixture(fixtureDef)}createSensorFixture(){var polygonShape=new Box2D.b2PolygonShape;polygonShape.SetAsBox((this.size.x+this.sensorSizeOffset.x)*.5,(this.size.y+this.sensorSizeOffset.y)*.5,Box2DUtils.b2Vec2_ZERO,0);var filter=new Box2D.b2Filter;filter.set_categoryBits(Constants.SHAPE_BASE_ZONE_CATEGORY);filter.set_maskBits(Constants.SHAPE_BASE_ZONE_MASK);var fixtureDef=new Box2D.b2FixtureDef;fixtureDef.set_shape(polygonShape);fixtureDef.set_isSensor(true);fixtureDef.set_filter(filter);return this.body.CreateFixture(fixtureDef)}clearPhysics(){if(this.sensorFixture){Game.instance.unregisterSensor(this.sensorFixture);this.body.DestroyFixture(this.sensorFixture);this.sensorFixture=null;}if(this.body){Game.getWorld().DestroyBody(this.body);this.body=null;}super.clearPhysics();}takeHit(damage){if(!this.isAlive)return;this.health-=damage;if(Utils.lessOrEqual(this.health,0)){this.health=0;this.isAlive=false;}}}_define_property$1(Base,"scriptName","base");

var base = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Base: Base
});

function _define_property(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key]=value;}return obj}class BaseData extends ActorData{constructor(...args){super(...args);_define_property(this,"size",void 0);_define_property(this,"sensorSizeOffset",void 0);_define_property(this,"maxHealth",100);}}_define_property(BaseData,"scriptName","baseData");

var base_data = /*#__PURE__*/Object.freeze({
    __proto__: null,
    BaseData: BaseData
});

export { effect as A, tower_placement as B, coin as C, coin_info as D, end_screen as E, actor_data as F, character_data as G, enemy_data as H, player_data as I, tower_data as J, projectile_data as K, coin_data as L, base as M, base_data as N, enemy_ai as a, bezier_path as b, constants as c, enemy_spawner as d, enemy_grid as e, follow_path_enemy_ai as f, enemy_path_spawner as g, enemy_point_spawner as h, box2d_utils as i, game as j, actor as k, character as l, player as m, enemy as n, joystick as o, path as p, desktop_input as q, mobile_input as r, shape_type as s, transform2d as t, utils as u, game_camera as v, anim_transition_data as w, tower as x, projectile as y, trail as z };
